{"version":3,"sources":["scripts/frontendTools.js","scripts/colorCodes.js","Components/Cards/StaticCard.js","Components/Cards/TabbedCard.js","Components/Cards/NumberedCard.js","Components/Minecraft/MinecraftText.js","Components/Minecraft/MinecraftItemDescription.js","Components/Minecraft/MinecraftItemImg.js","Components/Minecraft/MinecraftItemSlot.js","Components/Minecraft/MinecraftInventory.js","Components/ProgressBar/ProgressBar.js","Components/Apps/PlayerForm.js","scripts/playerName.js","Components/PlayerList/PlayerEntry.js","Components/PlayerList/PlayerList.js","Components/Apps/Player.js","Components/SearchField/SearchField.js","Components/QueryBox/QueryBox.js","Components/Apps/ItemSearch.js","Components/Nav/Nav.js","Components/Link/Link.js","Components/Apps/Leaderboard.js","serviceWorker.js","index.js"],"names":["pitMaster","require","Colors","Extra","ColorCodes","romanNumGen","int","roman","repeat","module","exports","levelString","prestige","level","lc","Pit","Levels","Math","floor","ColorCode","GRAY","RESET","pc","Prestiges","YELLOW","minutesToString","min","str","toLocaleString","timeSince","date","seconds","Date","interval","abbrNum","number","decPlaces","pow","abbrev","i","length","size","round","currId","obfuscators","alreadyParsed","styleMap","obfuscate","elem","string","multiMagic","currNode","listLen","nodeI","replaceRand","max","randChar","String","fromCharCode","random","substr","initMagic","el","obsStr","innerHTML","strLen","push","window","setInterval","indexOf","childNodes","nodeType","document","createElement","nodeValue","replaceChild","applyCode","codes","obfuscated","forEach","code","style","cssText","input","parsed","id","contains","clearInterval","indexDelta","strSlice","finalPre","match","codesLen","indexes","apply","replace","appendChild","substring","lastIndexOf","slice","parseStyle","raw","StaticCard","className","this","props","title","content","children","React","Component","TabbedCard","state","selected","onClick","e","preventDefault","setState","tabs","map","tab","borderBottom","key","NumberedCard","numberOnClick","position","first","prev","last","next","start","end","display","float","width","marginLeft","Fragment","margin","justifyContent","_","MinecraftText","text","dangerouslySetInnerHTML","__html","PureComponent","MinecraftItemDescription","onclick","marginBottom","name","description","line","mapped","MinecraftItemImg","meta","count","inner","JSON","parse","stringify","includes","backgroundColor","memo","cls","item","desc","colors","some","toLowerCase","onContextMenu","MinecraftInventory","rows","len","inventory","toFill","ceil","filler","Array","fill","maxWidth","index","uuid","blank","ProgressBar","info","hover","message","percent","type","minWidth","verticalAlign","height","paddingTop","PlayerForm","handleSubmit","srch","target","srchInp","value","trim","history","onSubmit","placeholder","cache","getDoc","tag","promise","Promise","resolve","a","async","fetch","request","json","console","log","success","result","error","buttonStyle","cursor","PlayerEntry","doc","getName","useState","setText","then","href","PlayerList","clone","players","tmpGroupQueue","splice","groupQueue","setGroupQueue","hasMore","setHasMore","initiated","setInitiated","loaded","setLoaded","initiate","loadMore","concat","instant","player","textAlign","marginTop","Player","user","loadUser","path","startsWith","res","data","undefined","catch","err","params","unlisten","listen","location","pathname","src","alt","fontSize","formattedName","formattedLevel","currentGold","frontendTools","playtime","profileDisplay","url","linkTitle","scammer","notes","discordid","alts","main","color","online","lastSave","bounty","xpProgress","goldProgress","renownProgress","recentKills","kill","victim","timestamp","inventories","marginRight","armor","enderchest","stash","well","perks","upgrades","renownShop","generalStats","prestiges","gold","unlocks","reverse","displayName","tier","SearchField","activeSuggestion","filteredSuggestions","showSuggestions","userInput","says","reporting","userNumber","showNumber","numRef","createRef","onChange","suggestions","currentTarget","split","filter","test","join","suggestion","Name","Boolean","find","s","NoNumber","reportString","onNumberChange","select","getAttribute","setTimeout","current","focus","Type","onKeyDown","keyCode","shiftKey","up","down","onKeyDownNumber","mainRef","onBlur","timeOutFix","report","suggestionsListComponent","tabIndex","ref","Mystics","pants","sword","bow","lives","maxLives","tokens","artifact","rare","legendary","bountiful","extraordinary","unthinkable","overpowered","miraculous","million","nonce","red","yellow","blue","orange","green","valid","formatted","Object","entries","ench","sort","b","createInputData","v4","QueryBox","inputs","buttonRef","killInput","clearTimeout","timeout","monitorInputs","foundType","buildAndSendQuery","queryString","query","c","ItemSearch","results","fake","loading","lastsize","page","readyItems","items","updatePath","requestOwner","checked","owner","targets","unshift","lastseen","directToOwner","ctrlKey","origin","open","withRouter","buttons","findBest","best","setSelected","useEffect","now","search","toFixed","places","n","minimumFractionDigits","maximumFractionDigits","boards","Proxy","kills","short","assists","damageDealt","damageReceived","damageRatio","transform","hidden","highestStreak","deaths","kdr","xp","lifetimeGold","contracts","gapples","gheads","lavaBuckets","soups","tierOnes","tierTwos","tierThrees","darkPants","darkPantsT2","leftClicks","chatMessages","wheatFarmed","fishedAnything","blocksBroken","blocksPlaced","kingsQuests","sewerTreasures","nightQuests","renown","lifetimeRenown","arrowShots","arrowHits","jumpsIntoPit","launcherLaunches","totalJumps","genesisPoints","joins","enderchestOpened","bowAccuracy","swordHits","meleeDamageDealt","meleeDamageReceived","meleeDamageRatio","bowDamageDealt","bowDamageReceived","bowDamageRatio","diamondItemsPurchased","fishedFish","hiddenJewelsTriggered","xpHourly","goldHourly","fishingRodCasts","kadr","killAssistHourly","killsHourly","contractsStarted","contractsRatio","num","default","get","prop","subTarget","subProp","ownKeys","getLeaderboard","category","pageRequest","leaderboard","getIndexerStatus","response","ok","getQuery","Leaderboard","setTarget","entires","loadedType","setData","finished","currentPosition","estimatedCount","currentQueueCount","maxBatchSize","maxQueueSize","batchTimeout","lastQueueChange","indexData","setIndexData","alive","stats","Reflect","borderTop","padding","score","paddingRight","hostname","navigator","serviceWorker","ready","registration","unregister","ReactDOM","render","exact","component","to","getElementById"],"mappings":"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","file":"static/js/main.b8dbf35a.chunk.js","sourcesContent":["const pitMaster = require('../pitMaster.json');\r\nconst Colors = pitMaster.Extra.ColorCodes;\r\n\r\n\r\n/**\r\n * Formats level like ingame\r\n * @param {number} prestige \r\n * @param {number} level \r\n * @returns {string} minecraft color formatted string\r\n */\r\nfunction levelString(prestige,level){\r\n    let lc = pitMaster.Pit.Levels[Math.floor(level/10)].ColorCode;\r\n    if(prestige===0) return Colors.GRAY+'['+lc+level+Colors.RESET+Colors.GRAY+']';\r\n    let pc=pitMaster.Pit.Prestiges[prestige].ColorCode;\r\n    return pc+'['+Colors.YELLOW+romanNumGen(prestige)+pc+'-'+lc+level+Colors.RESET+pc+']';\r\n} module.exports.levelString = levelString;\r\n\r\n/**\r\n * Turns an time into a formatter string\r\n * ex: f(1234) = '20h 34m'\r\n * @param {number} minutes \r\n * @returns {string}\r\n */\r\nfunction minutesToString(min){\r\n    if(min < 60) return `${min}m`;\r\n    let str = `${Math.floor(min/60).toLocaleString()}h`;\r\n    if(min%60!==0) str+=` ${Math.floor(min%60)}m`;\r\n    return str;\r\n} module.exports.minutesToString = minutesToString;\r\n\r\n/**\r\n * Produces a nicely formatted string of the time since a given date in unix epoch seconds\r\n * @param {number} date \r\n * @returns {string}\r\n */\r\nfunction timeSince(date) { // https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\r\n    var seconds = Math.floor((new Date() - date) / 1000);\r\n    var interval = Math.floor(seconds / 31536000);\r\n    if (interval > 1) {\r\n        return interval + \" years\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n        return interval + \" months\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n        return interval + \" days\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n        return interval + \" hours\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval < 5) {\r\n        return \"moments\";\r\n    }\r\n    if (interval > 1) {\r\n        return interval + \" minutes\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds\";\r\n} module.exports.timeSince = timeSince;\r\n\r\n/**\r\n * converts number to roman numeral string\r\n * @param {number} int\r\n * @returns {string} \r\n */\r\nfunction romanNumGen(int) { //code also in apiTools.js\r\n    let roman = '';\r\n    roman +=  'M'.repeat(int / 1000);  int %= 1000; \r\n    roman += 'CM'.repeat(int / 900);   int %= 900; \r\n    roman +=  'D'.repeat(int / 500);   int %= 500;  \r\n    roman += 'CD'.repeat(int / 400);   int %= 400;\r\n    roman +=  'C'.repeat(int / 100);   int %= 100;\r\n    roman += 'XC'.repeat(int / 90);    int %= 90;\r\n    roman +=  'L'.repeat(int / 50);    int %= 50;\r\n    roman += 'XL'.repeat(int / 40);    int %= 40;\r\n    roman +=  'X'.repeat(int / 10);    int %= 10;\r\n    roman += 'IX'.repeat(int / 9);     int %= 9;\r\n    roman +=  'V'.repeat(int / 5);     int %= 5;\r\n    roman += 'IV'.repeat(int / 4);     int %= 4;\r\n    roman +=  'I'.repeat(int);\r\n    return roman;\r\n} module.exports.romanNumGen = romanNumGen;\r\n\r\n/**\r\n * Formats numbers nicely ex: f(1234, 2) = 1.2k\r\n * @param {number} number \r\n * @param {number} decPlaces \r\n * @returns {string}\r\n */\r\nfunction abbrNum(number, decPlaces) { //https://stackoverflow.com/questions/2685911/is-there-a-way-to-round-numbers-into-a-reader-friendly-format-e-g-1-1k\r\n    // 2 decimal places => 100, 3 => 1000, etc\r\n    decPlaces = Math.pow(10,decPlaces);\r\n\r\n    // Enumerate number abbreviations\r\n    var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\r\n\r\n    // Go through the array backwards, so we do the largest first\r\n    for (var i=abbrev.length-1; i>=0; i--) {\r\n\r\n        // Convert array index to \"1000\", \"1000000\", etc\r\n        var size = Math.pow(10,(i+1)*3);\r\n\r\n        // If the number is bigger or equal do the abbreviation\r\n        if(size <= number) {\r\n             // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n             // This gives us nice rounding to a particular decimal place.\r\n             number = Math.round(number*decPlaces/size)/decPlaces;\r\n\r\n             // Handle special case where we round up to the next abbreviation\r\n             if((number === 1000) && (i < abbrev.length - 1)) {\r\n                 number = 1;\r\n                 i++;\r\n             }\r\n\r\n             // Add the letter for the abbreviation\r\n             number += abbrev[i];\r\n\r\n             // We are done... stop\r\n             break;\r\n        }\r\n    }\r\n\r\n    return number;\r\n} module.exports.abbrNum = abbrNum;","//I was sent this code by jackson#0001 idk if its his but sure aint mine. \r\nlet currId = 0,\r\n    obfuscators = {},\r\n    alreadyParsed = [],\r\n    styleMap = {\r\n        '§0': 'color:#FFFFFF',\r\n        '§1': 'color:#0000AA',\r\n        '§2': 'color:#00AA00',\r\n        '§3': 'color:#00AAAA',\r\n        '§4': 'color:#AA0000',\r\n        '§5': 'color:#AA00AA',\r\n        '§6': 'color:#FFAA00',\r\n        '§7': 'color:#999999',\r\n        '§8': 'color:#3f3f3f',\r\n        '§9': 'color:#5555FF',\r\n        '§a': 'color:#55FF55',\r\n        '§b': 'color:#55FFFF',\r\n        '§c': 'color:#FF5555',\r\n        '§d': 'color:#FF55FF',\r\n        '§e': 'color:#FFFF55',\r\n        '§f': 'color:#FFFFFF',\r\n        '§l': 'font-weight:bold',\r\n        '§m': 'text-decoration:line-through',\r\n        '§n': 'text-decoration:underline',\r\n        '§o': 'font-style:italic'\r\n    };\r\n\r\nconst obfuscate = (elem, string) => {\r\n    let multiMagic,\r\n        currNode,\r\n        listLen,\r\n        nodeI;\r\n\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    const replaceRand = (string, i) => {\r\n        var randChar = String.fromCharCode(randInt(64, 95));\r\n        return string.substr(0, i) + randChar + string.substr(i + 1, string.length);\r\n    }\r\n\r\n    const initMagic = (el, str) => {\r\n        var i = 0,\r\n            obsStr = str || el.innerHTML,\r\n            strLen = obsStr.length;\r\n        if (!strLen) return;\r\n        obfuscators[currId].push(\r\n            window.setInterval(function () {\r\n                if (i >= strLen) i = 0;\r\n                obsStr = replaceRand(obsStr, i);\r\n                el.innerHTML = obsStr;\r\n                i++;\r\n            }, 0)\r\n        );\r\n    }\r\n\r\n    if (string.indexOf('<br>') > -1) {\r\n        elem.innerHTML = string;\r\n        listLen = elem.childNodes.length;\r\n        for (nodeI = 0; nodeI < listLen; nodeI++) {\r\n            currNode = elem.childNodes[nodeI];\r\n            if (currNode.nodeType === 3) {\r\n                multiMagic = document.createElement('span');\r\n                multiMagic.innerHTML = currNode.nodeValue;\r\n                elem.replaceChild(multiMagic, currNode);\r\n                initMagic(multiMagic);\r\n            }\r\n        }\r\n    } else {\r\n        initMagic(elem, string);\r\n    }\r\n}\r\n\r\nconst applyCode = (string, codes) => {\r\n    var elem = document.createElement('span'),\r\n        obfuscated = false;\r\n\r\n    //string = string.replace(/\\x00/g, '');\r\n\r\n    codes.forEach(function (code) {\r\n        elem.style.cssText += styleMap[code] + ';';\r\n        if (code === '§k') {\r\n            obfuscate(elem, string);\r\n            obfuscated = true;\r\n        }\r\n    });\r\n\r\n    if (!obfuscated) elem.innerHTML = string;\r\n\r\n    return elem;\r\n}\r\n\r\nconst parseStyle = (string) => {\r\n    var finalPre = document.createElement('pre'),\r\n        codes = string.match(/§.{1}/g) || [],\r\n        codesLen = codes.length,\r\n        indexes = [],\r\n        indexDelta,\r\n        apply = [],\r\n        strSlice,\r\n        i;\r\n\r\n    if (!obfuscators[currId]) obfuscators[currId] = [];\r\n\r\n    string = string.replace(/\\n|\\\\n/g, '<br>');\r\n\r\n    for (i = 0; i < codesLen; i++) {\r\n        indexes.push(string.indexOf(codes[i]));\r\n        string = string.replace(codes[i], '\\x00\\x00');\r\n    }\r\n\r\n    if (indexes[0] !== 0) {\r\n        finalPre.appendChild(applyCode(string.substring(0, indexes[0]), []));\r\n    }\r\n\r\n    for (i = 0; i < codesLen; i++) {\r\n        indexDelta = indexes[i + 1] - indexes[i];\r\n        if (indexDelta === 2) {\r\n            while (indexDelta === 2) {\r\n                apply.push(codes[i]);\r\n                i++;\r\n                indexDelta = indexes[i + 1] - indexes[i];\r\n            }\r\n            apply.push(codes[i]);\r\n        } else {\r\n            apply.push(codes[i]);\r\n        }\r\n        if (apply.lastIndexOf('§r') > -1) {\r\n            apply = apply.slice(apply.lastIndexOf('§r') + 1);\r\n        }\r\n        strSlice = string.substring(indexes[i], indexes[i + 1]);\r\n        finalPre.appendChild(applyCode(strSlice, apply));\r\n    }\r\n\r\n    return finalPre;\r\n}\r\n\r\nconst clearObfuscators = (id) => {\r\n    obfuscators[id].forEach((interval) => {\r\n        clearInterval(interval);\r\n    });\r\n    alreadyParsed[id] = [];\r\n    obfuscators[id] = [];\r\n}\r\n\r\nconst mineParse = (input) => {\r\n    var parsed,\r\n        i = currId;\r\n    if (i > 0) {\r\n        while (i--) {\r\n            if (alreadyParsed[i].nodeType) {\r\n                if (!document.contains(alreadyParsed[i])) {\r\n                    clearObfuscators(i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    parsed = parseStyle(input);\r\n    alreadyParsed.push(parsed);\r\n    currId++;\r\n    return {\r\n        parsed: parsed,\r\n        raw: parsed.innerHTML\r\n    };\r\n};\r\n\r\nmodule.exports = mineParse; ","import React from 'react';\r\nimport './cardStyles.css';\r\n\r\nclass StaticCard extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"Card\" style={this.props.style}>\r\n            <div className=\"Card-Head\">\r\n                {this.props.title}\r\n            </div>\r\n            <div className=\"Card-Body\">\r\n                {this.props.content||this.props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaticCard;\r\n","import React from 'react';\r\nimport './cardStyles.css'\r\n\r\nclass TabbedCard extends React.Component {\r\n\r\n    state = {selected:0};\r\n\r\n    onClick = (id,e) => {\r\n        e.preventDefault();\r\n        this.setState({selected:id});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Card\">\r\n                <div className=\"Card-Head\">\r\n                    <ul>\r\n                        {this.props.tabs.map((tab,i)=>(\r\n                            <li style={{borderBottom: (i===this.state.selected)?'2px solid #999999':'none'}} key={i} onClick={e => this.onClick(i,e)}>\r\n                                {tab}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"Card-Body\">\r\n                    {this.props.content[this.state.selected]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabbedCard;\r\n","import React from 'react';\r\nimport './cardStyles.css';\r\n\r\nclass NumberedCard extends React.Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={selected:this.props.content.length-1};\r\n    }\r\n\r\n    numberOnClick = position => this.setState({selected:position});\r\n    first = () => this.setState({selected:0});\r\n    prev = () => this.setState({selected:this.state.selected-1});\r\n    last = () => this.setState({selected:this.props.content.length-1});\r\n    next = () => this.setState({selected:this.state.selected+1});\r\n\r\n    render() {\r\n        let start = Math.max(0,this.state.selected-2);\r\n        let end = Math.min(this.state.selected+3,this.props.content.length);\r\n        if(start===0) end = Math.min(5,this.props.content.length);\r\n        else if(end===this.props.content.length) start = Math.max(0,this.props.content.length-5);\r\n        return (\r\n            <div className=\"Card\" style={this.props.style}>\r\n                <div className=\"Card-Head\">\r\n                    <div style={{display:'inline-block'}}>Prestige History</div>\r\n                    {(this.props.content.length>1)?(\r\n                    <div style={{display:'inline-block',float:'none',width:'60%',marginLeft:'20px'}}>\r\n                        <div style={{display:'inline-block',width:'50px'}}>\r\n                            {(start!==0)?(\r\n                            <React.Fragment>\r\n                                <div onClick={this.first} className='CardTitle'>&lt;&lt;</div>\r\n                                <div onClick={this.prev} className='CardTitle'>&lt;</div>\r\n                            </React.Fragment>\r\n                            ):''}\r\n                        </div>\r\n                        <div style={{display:'inline-block',width:'235px'}}>\r\n                            <div style={{margin:'0px 10px',display:'flex',justifyContent:'center'}}>\r\n                                {this.props.content.slice(start,end).map((_,i)=>{\r\n                                        const position = i+start;\r\n                                        return (\r\n                                            <div className='CardTitle' key={position} onClick={() => this.numberOnClick(position)}>\r\n                                                <span style={{borderBottom: (position===this.state.selected)?'2px solid #999999':'none'}}>{position}</span>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display:'inline-block',width:'50px'}}>\r\n                            {(end!==this.props.content.length)?(\r\n                                <React.Fragment>\r\n                                    <div className='CardTitle' onClick={this.next}>&gt;</div>\r\n                                    <div className='CardTitle' onClick={this.last}>&gt;&gt;</div>\r\n                                </React.Fragment>\r\n                            ):''}\r\n                        </div>\r\n                    </div>):''}\r\n                </div>\r\n                <div className=\"Card-Body\">\r\n                    {this.props.content[this.state.selected]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberedCard;\r\n","import React from 'react';\r\nimport parseStyle from '../../scripts/colorCodes.js';\r\nimport './minecraftStyles.css';\r\n\r\nclass MinecraftText extends React.PureComponent{\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.raw!==state.raw||props.text){\r\n            if(props.text){\r\n                state.text = props.text;\r\n            }else{\r\n                state.text = parseStyle(props.raw).raw;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n\r\n    state={raw:this.props.raw,text:this.props.raw?parseStyle(this.props.raw).raw:this.props.text};\r\n\r\n    render(){\r\n        return (\r\n            <span className={`MinecraftText ${this.props.className}`} style={this.props.style} dangerouslySetInnerHTML={{__html:this.state.text}} onClick={this.props.onClick}></span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftText;\r\n","import React from 'react';\r\nimport MinecraftText from './MinecraftText';\r\nimport './minecraftStyles.css';\r\n\r\nclass MinecraftItemDescription extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mctooltip\" style={this.props.style} onClick={this.props.onclick}>\r\n                <MinecraftText style={{marginBottom:'3px'}} className='text-title' raw={this.props.name}/> <br/>\r\n                {this.props.description.map((line,i)=>\r\n                    <React.Fragment key={i}>\r\n                        <MinecraftText raw={line}/><br/>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftItemDescription;","import React from 'react';\r\nimport './itemStyles.css';\r\nimport './minecraftStyles.css';\r\n\r\nconst mapped = [\r\n    'ffAA00',\r\n    '55FF55',\r\n    '5555FF',\r\n    'FFFF55',\r\n    'FF5555',\r\n    '55FFFF',\r\n    '7DC383',\r\n    '000000'\r\n];\r\n\r\nfunction MinecraftItemImg(props){\r\n    const {id = 0, meta = 0, count = 1} = props;\r\n    const inner = (count>1)?<span className='textshadow count'>{count}</span>:'';\r\n    let style = JSON.parse(JSON.stringify((props.style || {})));\r\n    if(id>=298&&id<=301&&!(id===300&&mapped.includes(meta))){//leather items\r\n        style.backgroundColor = `#${meta}`;\r\n        return (\r\n            <div className={`item_ item_${id}  ${count===0?'grey':''}`} style={style} children={inner}/>\r\n        );\r\n    }else{\r\n        return (\r\n            <div className={`item_ item_${id} item_${id}_${meta} ${count===0?'darken':''}`} style={style} children={inner}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftItemImg;\r\n","import React from 'react';\r\nimport MinecraftItemDescription from './MinecraftItemDescription';\r\nimport MinecraftItemImg from './MinecraftItemImg';\r\nimport './minecraftStyles.css';\r\n\r\n/*\r\nclass MinecraftItemSlot extends React.PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        const {name = '', desc = []} = this.props.item;\r\n        let cls = '';\r\n        if(props.colors){\r\n            if(desc.some(line=>line.includes('RARE'))) cls = 'rare';\r\n            if(name.toLowerCase().includes('bountiful')) cls = 'bountiful';\r\n            if(name.toLowerCase().includes('legendary')) cls = 'legendary';\r\n            if(name.toLowerCase().includes('extraordinary')) cls = 'extraordinary';\r\n            if(name.toLowerCase().includes('evil')) cls = 'evil';\r\n            if(name.toLowerCase().includes('artifact')) cls = 'artifact';\r\n            if(name.toLowerCase().includes('miraculous')) cls = 'miraculous';\r\n            if(name.toLowerCase().includes('overpowered')) cls = 'overpowered';\r\n        }\r\n        this.state.cls = cls;\r\n    }\r\n\r\n    render() {\r\n        console.log('ITEM RENDER');\r\n        const {name = '', desc = [], id=0, meta=0, count=1} = this.props.item;\r\n        return (\r\n            <div className={`item ${this.cls}`} onClick={this.props.onClick}>\r\n                <MinecraftItemImg id={id} meta={meta} count={count}/>\r\n                {\r\n                    (name.length>0||desc.length>0)?\r\n                    <div className={`itemcontainer ${count===0?'halfgrey':''}`}>\r\n                        <MinecraftItemDescription name={name} description={desc}/>\r\n                    </div>:''\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}*/\r\n\r\nfunction MinecraftItemSlot(props){\r\n    let cls = '';\r\n    const {name = '', desc = [], id=0, meta=0, count=1} = props.item;\r\n    if(props.colors){\r\n        if(desc.some(line=>line.includes('RARE'))) cls = 'rare';\r\n        if(name.toLowerCase().includes('bountiful')) cls = 'bountiful';\r\n        if(name.toLowerCase().includes('legendary')) cls = 'legendary';\r\n        if(name.toLowerCase().includes('extraordinary')) cls = 'extraordinary';\r\n        if(name.toLowerCase().includes('unthinkable')) cls = 'unthinkable';\r\n        if(name.toLowerCase().includes('evil')) cls = 'evil';\r\n        if(name.toLowerCase().includes('artifact')) cls = 'artifact';\r\n        if(name.toLowerCase().includes('miraculous')) cls = 'miraculous';\r\n        if(name.toLowerCase().includes('overpowered')) cls = 'overpowered';\r\n    }\r\n    return (\r\n        <div className={`item ${cls}`} onClick={props.onClick} onContextMenu={props.onContextMenu}>\r\n            <MinecraftItemImg id={id} meta={meta} count={count}/>\r\n            {\r\n                (name.length>0||desc.length>0)?\r\n                <div className={`itemcontainer ${count===0?'halfgrey':''}`}>\r\n                    <MinecraftItemDescription name={name} description={desc}/>\r\n                </div>:''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(MinecraftItemSlot);","import React from 'react';\r\nimport MinecraftItemSlot from './MinecraftItemSlot';\r\nimport './minecraftStyles.css';\r\n\r\nclass MinecraftInventory extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const width = props.width || 9;\r\n        const rows = props.rows || 1;\r\n        let len = (props.inventory || []).length;\r\n        const toFill = Math.max(\r\n            rows*width-len,\r\n            width*Math.ceil(len/width)-len\r\n        );\r\n        let filler = new Array(toFill).fill({});\r\n        let style = {...props.style} || {};\r\n        style.maxWidth=`${55.4*width}px`;\r\n        this.state = {\r\n            inventory: props.inventory,\r\n            width,\r\n            style,\r\n            filler\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.inventory===state.inventory)return state;\r\n        const width = props.width || 9;\r\n        const rows = props.rows || 1;\r\n        let len = (props.inventory || []).length;\r\n        const toFill = Math.max(\r\n            rows*width-len,\r\n            width*Math.ceil(len/width)-len\r\n        );\r\n        let filler;\r\n        if(toFill===state.filler.length) filler = state.filler;\r\n        else filler = new Array(toFill).fill({});\r\n        let style = props.style || {};\r\n        style.maxWidth=`${55.4*width}px`;\r\n        return {\r\n            inventory: props.inventory,\r\n            width,\r\n            style,\r\n            filler\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.state.style} className=\"MinecraftInventory\">\r\n                {(this.state.inventory||[]).map((item,index)=>(\r\n                    <MinecraftItemSlot \r\n                        key={(item.uuid||'')+index} item={item} colors={this.props.colors}\r\n                        onClick={this.props.onClick?e=>this.props.onClick(index,e):()=>{}}\r\n                        onContextMenu={this.props.onContextMenu?e=>this.props.onContextMenu(index,e):()=>{}}\r\n                    />\r\n                ))}\r\n                {this.state.filler.map((blank,index)=>(\r\n                    <MinecraftItemSlot \r\n                        key={'filler'+index} item={blank} \r\n                        onClick={this.props.onClick?e=>this.props.onClick(index,e):()=>{}} \r\n                        onContextMenu={this.props.onContextMenu?e=>this.props.onContextMenu(index,e):()=>{}}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftInventory;","import React from 'react';\r\nimport './ProgressBar.css';\r\nimport MinecraftText from './../Minecraft/MinecraftText';\r\nimport MinecraftItemImg from './../Minecraft/MinecraftItemImg';\r\n\r\nclass ProgressBar extends React.Component {\r\n    render() {\r\n        const {info, item} = this.props;\r\n        const hover = info.message || Math.round(info.percent*1000)/10 + '%';\r\n        return (\r\n            <div title={hover} className=\"ProgressBar\" style={this.props.style}>\r\n                <div className={`progress-icon ${this.props.type}bg`}>\r\n                    <MinecraftItemImg {...item}/>\r\n                </div>\r\n                <div style={{display:'inline-block',minWidth:'270px',verticalAlign:'top',height:'40px',paddingTop:'3px'}}>\r\n                    <MinecraftText text={this.props.title} className=\"progress-name\"/>\r\n                    <div className=\"progress-bar\">\r\n                        <div className={`progress-bar-progress ${this.props.type}bg`} style={{width:(Math.min(info.percent,1)*97+3)+'%'}}/>\r\n                        <MinecraftText text={info.description} className=\"progress-bar-text textshadow\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\n\r\nclass PlayerForm extends React.Component {\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const srch = e.target.srchInp.value.trim().replace(/-/g,'');\r\n        if(srch!=='') {\r\n            this.props.history.push(`/players/${srch}`);\r\n            e.target.srchInp.value='';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search-header\">\r\n                <h1 className=\"page-header\">Pit Panda</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h3 className=\"page-header\">Advanced Pit Stats Grabber</h3>\r\n                    <fieldset className=\"text-holder\">\r\n                        <input type=\"text\" id=\"srchInp\" name=\"lookup\" placeholder=\"Enter a Minecraft Username or UUID...\" style={{width:\"50%\"}}/>\r\n                    </fieldset>\r\n                    <fieldset className=\"button-holder\">\r\n                        <input type=\"submit\" className=\"srchBtn\" value=\"Search\"/>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerForm;","export let cache = {};\r\nfunction getDoc(tag){\r\n    if(cache[tag]) return cache[tag];\r\n    const promise = new Promise(async resolve => {\r\n        try{\r\n            const request = await fetch(`/api/username/${tag}`);\r\n            const json = await request.json();\r\n            console.log(json);\r\n            if(!json.success) resolve({error:(json.error||'An error has occured')});\r\n            else {\r\n                cache[tag].result = json.name;\r\n                resolve(json.name);\r\n            } \r\n        }catch(e){\r\n            resolve({error:e});\r\n        }\r\n    });\r\n    cache[tag]={promise};\r\n    return cache[tag];\r\n}\r\n\r\nexport default getDoc;","import React, {useState} from 'react';\r\nimport MinecraftText from '../Minecraft/MinecraftText';\r\nimport getName from '../../scripts/playerName';\r\n\r\nconst buttonStyle = {\r\n    display:'block',\r\n    backgroundColor:'none',\r\n    cursor:'pointer'\r\n}\r\n\r\nfunction PlayerEntry(props){\r\n    let doc = getName(props.uuid);\r\n    let [text, setText] = useState(doc.result?doc.result:\"§7Loading\");\r\n    if(!doc.result) doc.promise.then(name=>setText(name))\r\n    const redirect = () => props.history.push(`/players/${props.uuid}`);\r\n    return (\r\n        <span title={props.hover} style={buttonStyle} href={`/players/${props.uuid}`} onClick={redirect}>\r\n            <MinecraftText raw={text}/>\r\n        </span>\r\n    );\r\n} export default PlayerEntry;","import React, {useState} from 'react';\r\nimport PlayerEntry from './PlayerEntry';\r\n\r\nfunction PlayerList(props){\r\n    let clone = props.players.slice();\r\n    let tmpGroupQueue = [];\r\n    while(clone.length){\r\n        tmpGroupQueue.push(clone.splice(0,10));\r\n    }\r\n    let [groupQueue, setGroupQueue] = useState(tmpGroupQueue);\r\n    let [hasMore, setHasMore] = useState(groupQueue.length);\r\n    let [initiated, setInitiated] = useState(false);\r\n    let [loaded, setLoaded] = useState([]);\r\n    if(props.instant&&!initiated) initiate();\r\n    function initiate(){\r\n        setInitiated(true);\r\n        loadMore();\r\n    }\r\n    function loadMore(){\r\n        setLoaded(loaded.concat(groupQueue[0]));\r\n        setGroupQueue(groupQueue.slice(1));\r\n        setHasMore(groupQueue.length-1);\r\n    }\r\n    return (\r\n        <>\r\n            {loaded.map((player,index)=><PlayerEntry key={index} uuid={player.tag} hover={player.hover}  history={props.history}/>)}\r\n            {hasMore?(\r\n                <div style={{textAlign:'center'}}>\r\n                    {initiated?(\r\n                        <input type=\"button\" className=\"srchBtn\" value=\"Load More\" style={{marginTop:'10px'}} onClick={loadMore}/>\r\n                    ):(\r\n                        <input type=\"button\" className=\"srchBtn\" value=\"Load\" style={{margin:0}} onClick={initiate}/>\r\n                    )}\r\n                </div>\r\n            ):''}\r\n        </>\r\n    );\r\n} export default PlayerList;","import React from 'react';\r\nimport StaticCard from '../Cards/StaticCard';\r\nimport TabbedCard from '../Cards/TabbedCard';\r\nimport NumberedCard from '../Cards/NumberedCard';\r\nimport MinecraftText from '../Minecraft/MinecraftText';\r\nimport MinecraftInventory from '../Minecraft/MinecraftInventory';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport PlayerForm from './PlayerForm';\r\nimport PlayerList from '../PlayerList/PlayerList';\r\nimport frontendTools from '../../scripts/frontendTools';\r\n\r\nclass Player extends React.Component {\r\n  state = {user:null};\r\n\r\n  componentDidMount(){\r\n    this.loadUser(`/players/${(this.props.match.params.id||'').trim()}`);\r\n    this.unlisten = this.props.history.listen((location)=>{\r\n      this.loadUser(location.pathname);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unlisten();\r\n  }\r\n\r\n  loadUser = (path) => {\r\n    if(!path.startsWith('/players/'))return;\r\n    fetch(`/api${path}`).then(res=>res.json()).then(json => {\r\n      console.log(json);\r\n      if(json.success) {\r\n        this.setState({user:json.data,error:undefined});\r\n      } else this.setState({error:json.error,user:undefined});\r\n    }).catch((err)=>{\r\n      this.setState({error:err,user:undefined});\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PlayerForm history={this.props.history}/>\r\n        <div style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center'\r\n        }}>\r\n          {this.state.user?(\r\n            <React.Fragment>\r\n              <div id=\"side\" style={{\r\n                display: 'inline-block',\r\n                margin: '20px',\r\n                minWidth: '350px'\r\n              }}>\r\n                <StaticCard title=\"Profile\">\r\n                  <div>\r\n                    <img \r\n                      src={`https://crafatar.com/avatars/${this.state.user.uuid}?overlay=true`} \r\n                      style = {{width:'100px', height:'100px', display:'inline-block'}}\r\n                      alt = ''\r\n                    />\r\n                    <div key={this.state.user.uuid} style={{verticalAlign:'top', display:'inline-block', marginTop:'2px',marginLeft:'10px', fontSize:'17px'}}>\r\n                      <MinecraftText style={{fontSize:'110%'}} raw={this.state.user.formattedName}/><br/>\r\n                      <MinecraftText raw={`LVL: ${this.state.user.formattedLevel}`}/><br/>\r\n                      <MinecraftText raw={`Gold: §6${this.state.user.currentGold.toLocaleString()}g`}/><br/>\r\n                      <MinecraftText raw={`Played: §f${frontendTools.minutesToString(this.state.user.playtime)}`}/>\r\n                    </div>\r\n                  </div>\r\n                </StaticCard>\r\n                {this.state.user.profileDisplay?(\r\n                  <StaticCard title={this.state.user.profileDisplay.title}>\r\n                    <div style={{maxWidth:'300px'}}>\r\n                      {this.state.user.profileDisplay.message?<p style={{marginBottom:this.state.user.profileDisplay.url?'10px':''}}>{this.state.user.profileDisplay.message}</p>:''}\r\n                      {this.state.user.profileDisplay.url?<a href={this.state.user.profileDisplay.url}>{this.state.user.profileDisplay.linkTitle||this.state.user.profileDisplay.url}</a>:''}\r\n                    </div>\r\n                  </StaticCard>\r\n                ):''}\r\n                {this.state.user.scammer?(\r\n                  <StaticCard title=\"Scammer\">\r\n                    <div style={{maxWidth:'300px'}}>\r\n                      This player has been marked as scammer by the <a href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" title=\"Coming Soon\">Trade Center Discord</a> staff.\r\n                      {this.state.user.scammer.notes?<><br/><br/>Trade Center Staff notes:<br/> {this.state.user.scammer.notes}</>:''}\r\n                      {this.state.user.scammer.discordid?<><br/><br/>Discord ID: <br/>{this.state.user.scammer.discordid}</>:''}\r\n                      {(this.state.user.scammer.alts&&this.state.user.scammer.alts.length)?<><br/><br/>Alts:<br/><PlayerList players={this.state.user.scammer.alts.map(alt=>({tag:alt}))} instant={true} /></>:''}\r\n                      {this.state.user.scammer.main?<><br/><br/>Main:<br/><PlayerList players={[{tag:this.state.user.scammer.main}]} instant={true} /></>:''}\r\n                    </div>\r\n                  </StaticCard>\r\n                ):''}\r\n                <StaticCard title=\"Status\" content={\r\n                  <div style={{fontSize:'16px'}}>\r\n                    <MinecraftText className='text-title' style={{color:this.state.user.online?'green':'red'}} text={this.state.user.online?'Online':'Offline'}/><br/>\r\n                    <MinecraftText text={`Last seen in pit ${frontendTools.timeSince(this.state.user.lastSave)} ago`}/><br/>\r\n                    {this.state.user.bounty?<MinecraftText raw={`Bounty: §6${this.state.user.bounty.toLocaleString()}g`}/>:''}\r\n                  </div>\r\n                }/>\r\n                <StaticCard title=\"Progress\" content={\r\n                  <div>\r\n                    <ProgressBar \r\n                      info={this.state.user.xpProgress} \r\n                      item={{id:384}} type=\"xp\" title=\"Prestige XP\"\r\n                    />\r\n                    <ProgressBar \r\n                      info={this.state.user.goldProgress} \r\n                      item={{id:266}} type=\"gold\" title=\"Prestige Gold\"\r\n                    />\r\n                    <ProgressBar \r\n                      info={this.state.user.renownProgress} \r\n                      item={{id:138}} type=\"renown\" title=\"Renown Shop\" style={{marginBottom:'0px'}}\r\n                    />\r\n                  </div>\r\n                }/>\r\n                {this.state.user.recentKills.length?(\r\n                  <StaticCard title=\"Recent Kills\" key={this.state.user.uuid}>\r\n                    <PlayerList players={this.state.user.recentKills.map(kill=>({tag:kill.victim,hover:new Date(kill.timestamp).toLocaleString()}))}  history={this.props.history}/>\r\n                  </StaticCard>\r\n                ):''}\r\n              </div>\r\n              <div id=\"main\" style={{\r\n                display: 'inline-block',\r\n                margin: '20px',\r\n                minWidth: '600px'\r\n              }}>\r\n                <TabbedCard tabs={[\"Inventory\",\"Enderchest\",\"Stash/Well\"]} content={[\r\n                  (\r\n                    <div key={`Inventory-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='main' inventory={this.state.user.inventories.main} rows={4} colors={true} style={{marginRight:'3px'}}/>\r\n                      <MinecraftInventory key='armor' inventory={this.state.user.inventories.armor} width={1} rows={4} colors={true}/>\r\n                    </div>\r\n                  ),(\r\n                    <div key={`Enderchest-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='enderchest' inventory={this.state.user.inventories.enderchest} rows={3} colors={true}/>\r\n                    </div>\r\n                  ),(\r\n                    <div key={`Stash/Well-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='stash' inventory={this.state.user.inventories.stash} rows={2} colors={true} style={{marginRight:'3px'}}/>\r\n                      <MinecraftInventory key='well' style={{verticalAlign:'top'}} inventory={this.state.user.inventories.well} width={1} rows={2} colors={true}/>\r\n                    </div>\r\n                  )\r\n                ]}/>\r\n                <TabbedCard tabs={[\"Perk Shop\",\"Renown Shop\"]} content={[\r\n                  (\r\n                    <div key={`Perk-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='perks' inventory={this.state.user.inventories.perks} width={this.state.user.inventories.perks.length} style={{margin:'0 auto', display:'block'}}/>\r\n                      <hr/>\r\n                      <MinecraftInventory key='upgrades' inventory={this.state.user.inventories.upgrades} width={7} style={{margin:'0 auto', display:'block'}}/>\r\n                    </div>\r\n                  ),(\r\n                    <div key={`Renown-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='renownshop' inventory={this.state.user.inventories.renownShop} width={7} style={{margin:'0 auto', display:'block'}}/>\r\n                    </div>\r\n                  )\r\n                ]}/>\r\n                <StaticCard title=\"General Stats\" content={\r\n                  <div key={`General-${this.state.user.uuid}`}>\r\n                    <MinecraftInventory key='genstats' inventory={this.state.user.inventories.generalStats} width={this.state.user.inventories.generalStats.length} style={{margin:'0 auto', display:'block'}}/>\r\n                  </div>\r\n                }/>\r\n                <NumberedCard key={this.state.user.uuid} content={this.state.user.prestiges.map((prestige,index)=>(\r\n                  <div>\r\n                    {prestige.timestamp?<h3 style={{marginBottom:'10px'}}>Unlocked on {(new Date(prestige.timestamp)).toLocaleString()}</h3>:''}\r\n                    {prestige.gold&&this.state.user.prestiges.length-1!==index?<h3 style={{marginBottom:'10px'}}>Completed with {frontendTools.abbrNum(prestige.gold,2)} gold earned</h3>:''}\r\n                    <table style={{width:'100%'}}>\r\n                      <tbody>\r\n                        <tr>\r\n                        <td><strong>Type</strong></td><td><strong>Upgrade</strong></td><td><strong>Unlock time</strong></td>\r\n                        </tr>\r\n                        {prestige.unlocks.length>0?prestige.unlocks.slice().reverse().map((item,i)=>\r\n                          <tr key={i}>\r\n                            <td>{item.type}</td><td>{item.displayName} {(typeof item.tier === 'number')?item.tier+1:''}</td><td>{(new Date(item.timestamp)).toLocaleString()}</td>\r\n                          </tr>\r\n                        ):(\r\n                          <tr>\r\n                            <td>No Unlocks this Prestige</td><td></td><td></td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ))}/>\r\n              </div>\r\n            </React.Fragment>\r\n          ):(\r\n            <div style={{color:\"white\"}}>\r\n              {this.state.error||\"Loading...\"}\r\n            </div>\r\n          )\r\n          }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport MinecraftText from '../Minecraft/MinecraftText';\r\nimport './SearchField.css';\r\n\r\nclass SearchField extends Component {\r\n\r\n    state = {\r\n        // The active selection's index\r\n        activeSuggestion: 0,\r\n        // The suggestions that match the user's input\r\n        filteredSuggestions: [],\r\n        // Whether or not the suggestion list is shown\r\n        showSuggestions: false,\r\n        // What the user has entered\r\n        userInput: this.props.says,\r\n        reporting: this.props.says,\r\n        userNumber: \"\",\r\n        showNumber:false\r\n    };\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        return {\r\n            activeSuggestion:state.activeSuggestion,\r\n            filteredSuggestions:state.filteredSuggestions,\r\n            showSuggestions:state.showSuggestions,\r\n            userInput:props.says,\r\n            reporting:state.reporting,\r\n            userNumber: state.userNumber,\r\n            showNumber:state.showNumber\r\n        }\r\n    }\r\n\r\n    numRef = React.createRef();\r\n\r\n    // Event fired when the input value is changed\r\n    onChange = e => {\r\n        const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value.split('').filter(str=>/[-+!\"':a-zA-Z0-9 ]/.test(str)).join('');\r\n\r\n        // Filter our suggestions that don't contain the user's input\r\n        const filteredSuggestions = suggestions.filter(\r\n            suggestion =>\r\n                suggestion[1].Name.replace(/§./g,'').toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n\r\n        // Update the user input and filtered suggestions, reset the active\r\n        // suggestion and make sure the suggestions are shown\r\n        const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===userInput&&!s[1].NoNumber))\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions,\r\n            showSuggestions: true,\r\n            userInput: userInput,\r\n            reporting: userInput,\r\n            showNumber,\r\n            userNumber:showNumber?this.state.userNumber:''\r\n        });\r\n        this.reportString(userInput,showNumber,this.state.userNumber,userInput);\r\n    };\r\n\r\n    reportString(value,showNumber,number,text){\r\n        if(text==='') return this.props.report('', '', 'resource');\r\n        value=value.toLowerCase();\r\n        number=number.toLowerCase();\r\n        let type = 'resource';\r\n        let match = this.props.suggestions.find(s=>value===s[0]);\r\n        if(!match){\r\n            match = this.props.suggestions.find(s=>s[1].Name.replace(/§./g,'').toLowerCase() === value);\r\n            if(!match) match = this.props.suggestions.find(s=>s[1].Name.replace(/§./g,'').toLowerCase().indexOf(value) > -1);\r\n            if(match) {\r\n                if(!showNumber&&!match[1].NoNumber){\r\n                    showNumber=true;\r\n                    number='0+';\r\n                }\r\n                if(match[1].Name.replace(/§./g,'').toLowerCase()===value) {\r\n                    type=match[1].Type;\r\n                    this.setState({showNumber:!match[1].NoNumber});\r\n                }\r\n                value  = match[0];\r\n            }\r\n        }else{\r\n            type=match[1].Type;\r\n        }\r\n        if(value==='color'){\r\n            const colors = this.props.suggestions.find(s=>s[0]==='color');\r\n            if(colors&&typeof colors[1].Colors[number] !== 'undefined') number=colors[1].Colors[number];\r\n        }\r\n        if(typeof number === 'undefined' || number==='') number = '0+';\r\n        if(number.startsWith('<')) number=number.substring(1)+'-';\r\n        if(number.startsWith('>')) number=number.substring(1)+'+';\r\n        this.props.report(value+(showNumber?number:''), text, type);\r\n    }\r\n\r\n    onNumberChange = e => {\r\n        let userNumber = e.currentTarget.value.split('').filter(str=>/[-+><0-9a-zA-Z]/.test(str)).join('');\r\n        this.setState({userNumber});\r\n        this.reportString(this.state.reporting,true,userNumber,this.state.userInput);\r\n    }\r\n\r\n    onClick = e => {\r\n        this.select(e.currentTarget.getAttribute('index'));\r\n    };  \r\n\r\n    select = index => {\r\n        const reporting = this.state.filteredSuggestions[index][0];\r\n        const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===reporting&&!s[1].NoNumber));\r\n        if(showNumber) setTimeout(()=>this.numRef.current.focus(),0);\r\n        const userInput = this.state.filteredSuggestions[index][1].Name.replace(/§./g,'')\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions:[],\r\n            showSuggestions: false,\r\n            showNumber,\r\n            reporting,\r\n            userNumber:'',\r\n            userInput\r\n        });\r\n        this.reportString(reporting,showNumber,this.state.userNumber,userInput, this.state.filteredSuggestions[index][1].Type);\r\n    }\r\n\r\n    onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions, showSuggestions } = this.state;\r\n        if(e.currentTarget.value!=='' && showSuggestions && filteredSuggestions.length && filteredSuggestions.length !== this.props.suggestions.length){\r\n            if (e.keyCode === 13 || (e.keyCode === 9 && !e.shiftKey)) {\r\n                if(filteredSuggestions[activeSuggestion]){\r\n                    this.select(activeSuggestion);\r\n                }else{\r\n                    const reporting = e.currentTarget.value;\r\n                    const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===reporting&&!s[1].NoNumber));\r\n                    this.setState({\r\n                        activeSuggestion: 0,\r\n                        showSuggestions: false,\r\n                        userInput: e.currentTarget.value,\r\n                        showNumber,\r\n                        userNumber: showNumber?this.state.userNumber:'',\r\n                        reporting\r\n                    });\r\n                    this.reportString(reporting,showNumber,this.state.userNumber,e.currentTarget.value);\r\n                }\r\n            }\r\n            // User pressed the up arrow, decrement the index\r\n            else if (e.keyCode === 38) {\r\n                if (activeSuggestion === 0) {\r\n                    return;\r\n                }\r\n    \r\n                this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n            }\r\n            // User pressed the down arrow, increment the index\r\n            else if (e.keyCode === 40) {\r\n                if (activeSuggestion + 1 === filteredSuggestions.length) {\r\n                    return;\r\n                }\r\n    \r\n                this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n            }\r\n        }else{\r\n            if (e.keyCode === 8 && e.currentTarget.value==='') return this.props.kill();\r\n            else if (e.keyCode===38) this.props.up();\r\n            else if (e.keyCode===40) this.props.down();\r\n            else if (e.keyCode===13) {\r\n                if(this.state.showNumber) this.numRef.current.focus();\r\n                else this.props.down();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDownNumber = e => {\r\n        if (e.keyCode === 8 && e.currentTarget.value==='') this.props.mainRef.current.focus();\r\n        else if (e.keyCode===38) this.props.up();\r\n        else if (e.keyCode===40||e.keyCode===13) this.props.down();\r\n    }\r\n\r\n    onBlur = e => {\r\n        this.props.timeOutFix(setTimeout(()=>this.setState({ showSuggestions: false }),150));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onNumberChange,\r\n            onClick,\r\n            onKeyDown,\r\n            numRef,\r\n            onBlur,\r\n            onKeyDownNumber,\r\n            state: {\r\n                activeSuggestion,\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                showNumber,\r\n                userInput,\r\n                userNumber\r\n            }\r\n        } = this;\r\n\r\n        let suggestionsListComponent;\r\n\r\n        const tabIndex = {};\r\n        if(!showNumber) tabIndex.tabIndex=-1;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if(filteredSuggestions.length){\r\n                suggestionsListComponent = (\r\n                    <ul className={`suggestions ${showNumber?'SuggestionsHalf':''}`}>\r\n                        {filteredSuggestions.slice(0,8).map((suggestion, index) => {\r\n                            let className;\r\n    \r\n                            // Flag the active suggestion with a class\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestion-active\";\r\n                            }\r\n    \r\n                            return (\r\n                                <li\r\n                                    className={className}\r\n                                    key={suggestion[0]}\r\n                                    onClick={onClick}\r\n                                    index={index}\r\n                                    >\r\n                                    <MinecraftText raw={suggestion[1].Name}/>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                    value={userInput}\r\n                    onBlur={onBlur}\r\n                    ref={this.props.mainRef}\r\n                    className={`SearchField ${showNumber?'Half':''}`}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onNumberChange}\r\n                    onKeyDown={onKeyDownNumber}\r\n                    value={userNumber}\r\n                    className={`SearchField NumberField ${showNumber?'':'HideField'}`}\r\n                    ref={numRef}\r\n                    {...tabIndex}\r\n                />\r\n                {suggestionsListComponent}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport SearchField from '../SearchField/SearchField';\r\nimport StaticCard from '../Cards/StaticCard';\r\nimport pitMaster from '../../pitMaster.json';\r\nimport uuid from 'uuid';\r\n\r\nlet Mystics = pitMaster.Pit.Mystics;\r\nMystics.pants = {Name:'§fPants',Type:'pants',NoNumber:true};\r\nMystics.sword = {Name:'§fSword',Type:'sword',NoNumber:true};\r\nMystics.bow = {Name:'§fBow',Type:'bow',NoNumber:true};\r\nMystics.lives = {Name:'§fLives',Type:'resource'};\r\nMystics.maxLives = {Name:'§fMax Lives',Type:'resource'};\r\nMystics.tokens = {Name:'§fTokens',Type:'resource'};\r\nMystics.artifact = {Name:'§fArtifact',Type:'resource',NoNumber:true};\r\nMystics.rare = {Name:'§fRare',Type:'resource',NoNumber:true};\r\nMystics.legendary = {Name:'§fLegendary',Type:'resource',NoNumber:true};\r\nMystics.bountiful = {Name:'§fBountiful',Type:'resource',NoNumber:true};\r\nMystics.extraordinary = {Name:'§fExtraordinary',Type:'resource',NoNumber:true};\r\nMystics.unthinkable = {Name:'§fUnthinkable',Type:'resource',NoNumber:true};\r\nMystics.overpowered = {Name:'§fOverpowered',Type:'resource',NoNumber:true};\r\nMystics.miraculous = {Name:'§fMiraculous',Type:'resource',NoNumber:true};\r\nMystics.million = {Name:'§fOne in a Million',Type:'resource',NoNumber:true};\r\nMystics.nonce = {Name:'§fNonce',Type:'resource'};\r\nMystics.color = {Name:'§fColor',Type:'pants',Colors:{\r\n    red:'0',\r\n    yellow:'1',\r\n    blue:'2',\r\n    orange:'3',\r\n    green:'4'\r\n}};\r\nMystics['color0'] = {Name:'§fRed',Type:'pants',NoNumber:true};\r\nMystics['color1'] = {Name:'§fYellow',Type:'pants',NoNumber:true};\r\nMystics['color2'] = {Name:'§fBlue',Type:'pants',NoNumber:true};\r\nMystics['color3'] = {Name:'§fOrange',Type:'pants',NoNumber:true};\r\nMystics['color4'] = {Name:'§fGreen',Type:'pants',NoNumber:true};\r\n\r\nconst valid = ['pants','sword','bow','resource'];\r\nconst formatted = Object.entries(Mystics)\r\n    .filter(([,ench])=>valid.includes(ench.Type))\r\n    .sort(([,a],[,b])=>a.Name.substring(a.Name.indexOf('§9')+2)<b.Name.substring(b.Name.indexOf('§9')+2)?-1:1);\r\n\r\nfunction createInputData(){\r\n    return {id:uuid.v4(),ref:React.createRef(),reporting:'',says:''};\r\n}\r\n\r\nclass QueryBox extends React.Component{\r\n\r\n    state={\r\n        inputs:[createInputData()],\r\n        type:'*'\r\n    }\r\n    buttonRef=React.createRef();\r\n\r\n    killInput = (index) => {\r\n        if((index!==this.state.inputs.length-1&&index!==0)||(index!==0&&this.state.inputs[index-1].report==='')){\r\n            let inputs = this.state.inputs;\r\n            inputs[index-1].ref.current.focus();\r\n            inputs[index-1].says+='_';\r\n            clearTimeout(inputs[index].timeout)\r\n            inputs = inputs.slice(0,index).concat(inputs.slice(index+1));\r\n            this.setState({inputs});\r\n        }\r\n    }\r\n\r\n    timeOutFix = (timeout,index) => {\r\n        let inputs = this.state.inputs;\r\n        inputs[index].timeout=timeout;\r\n        this.setState({inputs});\r\n    }\r\n\r\n    monitorInputs = (report,raw,type,index) => {\r\n        let inputs = this.state.inputs;\r\n        inputs[index].reporting=report;\r\n        inputs[index].says=raw;\r\n        inputs[index].type=type;\r\n        let foundType;\r\n        for(const input of inputs){\r\n            if(input.type&&input.type!=='resource'){\r\n                foundType=input.type;\r\n                this.setState({type:input.type})\r\n            }\r\n        }\r\n        if(!foundType) this.setState({type:'*'});\r\n        if(index+1===inputs.length){\r\n            inputs.push(createInputData());\r\n        }\r\n        this.setState({inputs});\r\n    }\r\n\r\n    buildAndSendQuery = () => {\r\n        let inputs = this.state.inputs;\r\n        let toClear = inputs.filter((input,index)=>(input.reporting==='')&&index!==inputs.length-1);\r\n        toClear.forEach(input=>clearTimeout(input.timeout))\r\n        inputs = inputs.filter((input,index)=>(input.reporting!=='')||index===inputs.length-1);\r\n        let queryString = inputs.slice(0,-1).map(i=>i.reporting).join();\r\n        if(this.state.type!=='*') queryString+=','+this.state.type;\r\n        this.props.query(queryString);\r\n        this.setState({inputs});\r\n    }\r\n\r\n    focus = (index) => {\r\n        if(this.state.inputs[index]){\r\n            this.state.inputs[index].ref.current.focus();\r\n        }else if(index>=this.state.inputs.length) this.buttonRef.current.focus();\r\n    }\r\n\r\n    render(){\r\n        let suggestions = formatted;\r\n        if(this.state.type!=='*') suggestions = suggestions.filter(([,ench])=>['resource',this.state.type].includes(ench.Type));\r\n        return (\r\n            <StaticCard title=\"Query\" style={{width:'350px',display:'inline-block',verticalAlign:'top',margin:'20px',textAlign:'left'}}>\r\n                {this.state.inputs.map((input,index)=>(\r\n                    <SearchField \r\n                        up={()=>this.focus(index-1)} \r\n                        down={()=>this.focus(index+1)} \r\n                        says={input.says} \r\n                        timeOutFix={timeout=>this.timeOutFix(timeout,index)} \r\n                        kill={e=>this.killInput(index)} \r\n                        key={input.id} \r\n                        mainRef={input.ref} \r\n                        suggestions={suggestions} \r\n                        report={(a,b,c)=>this.monitorInputs(a,b,c,index)}\r\n                    />\r\n                ))}\r\n                <button \r\n                    onClick={this.buildAndSendQuery} \r\n                    onKeyDown={e=>{if(e.keyCode===38)this.focus(this.state.inputs.length-1);}} \r\n                    ref={this.buttonRef} \r\n                    className='srchBtn' \r\n                    style={{marginTop:'0px'}}\r\n                >Search</button>\r\n            </StaticCard>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QueryBox;\r\n","import React from 'react';\r\nimport MinecraftInventory from '../Minecraft/MinecraftInventory';\r\nimport StaticCard from '../Cards/StaticCard';\r\nimport QueryBox from '../QueryBox/QueryBox';\r\nimport getName, {cache} from '../../scripts/playerName';\r\n\r\nconst pageSize = 72;\r\nclass ItemSearch extends React.Component {\r\n    state={\r\n        results:new Array(9).fill({fake:true}),\r\n        loading:false,\r\n        lastsize:0,\r\n        page:0,\r\n        queryString:''\r\n    };\r\n\r\n    componentDidMount(){\r\n        if(this.props.match.params.query) this.query(this.props.match.params.query);\r\n        this.unlisten = this.props.history.listen((location)=>{\r\n            this.query(location.pathname.substring('/itemsearch/'.length));\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.unlisten();\r\n    }\r\n\r\n    query=(queryString)=>{\r\n        if(queryString.length===0)\r\n            return this.setState({results:new Array(9).fill({fake:true}),loading:false,lastsize:0,page:0,queryString});\r\n        if(this.state.queryString===queryString) return;\r\n        this.setState({loading:true,page:0,queryString});\r\n        fetch('/api/itemsearch/'+queryString).then(res=>res.json()).then(json => {\r\n            if(!json.success) return;\r\n            this.readyItems(json.items);\r\n            const result = json.items.map(item=>item.item);\r\n            console.log(json);\r\n            this.setState({results:result,loading:false,lastsize:result.length});\r\n        });\r\n    }\r\n\r\n    updatePath=(queryString)=>this.props.history.push(`/itemsearch/${queryString}`);\r\n    \r\n    requestOwner= async (index)=>{\r\n        if(!this.state.results[index].fake&&!this.state.results[index].checked){\r\n            let results = this.state.results;\r\n            let owner = results[index].owner;\r\n\r\n            let targets = results.filter(item=>item.owner===owner);\r\n\r\n            let doc = getName(owner);\r\n            let result = doc.result;\r\n\r\n            if(!result){\r\n                for(let item of targets){\r\n                    item.checked = true;\r\n                    item.desc[0] = '§7Owner: Loading';\r\n                }\r\n                this.setState({results});\r\n                result = await doc.promise;\r\n            }\r\n            if(result.error) {\r\n                for(let item of targets){\r\n                    item.checked = false;\r\n                    item.desc[0] = '§7Owner: §4ERROR';\r\n                }\r\n                console.err(result.error);\r\n            }else{\r\n                for(let item of targets){\r\n                    item.desc[0] = `§7Owner: ${result}`;\r\n                }\r\n            }\r\n            this.setState({results});\r\n        }\r\n    }\r\n\r\n    readyItems = (items) => {\r\n        for(let item of items){\r\n            item.item.desc.unshift('§7Lastseen: '+new Date(item.lastseen*1000).toLocaleString());\r\n            if(cache[item.owner]&&cache[item.owner].result) {\r\n                item.item.desc.unshift('§7Owner: '+cache[item.owner].result);\r\n                item.item.checked = true;\r\n            }\r\n            else {\r\n                item.item.desc.unshift('§7Owner: Click to request');\r\n                item.item.checked = false;\r\n            }\r\n            item.item.uuid = item.id;\r\n            item.item.owner = item.owner;\r\n        }\r\n    }\r\n\r\n    loadMore = () => {\r\n        this.setState({loading:true,page:this.state.page+1})\r\n        fetch(`/api/itemSearch/${this.state.queryString}/${this.state.page+1}`).then(res=>res.json()).then(json => {\r\n            if(!json.success) return;\r\n            this.readyItems(json.items);\r\n            let results = this.state.results;\r\n            results = results.concat(json.items.map(item=>item.item));\r\n            console.log(json);\r\n            this.setState({results,loading:false,lastsize:json.items.length});\r\n        });\r\n    }\r\n\r\n    directToOwner = (i,e) =>{\r\n        e.preventDefault();\r\n        if(this.state.results[i].fake)return;\r\n        if(!e.ctrlKey){\r\n            this.props.history.push(`/players/${this.state.results[i].owner}`);\r\n        }else{\r\n            let path = `${window.location.origin}/players/${this.state.results[i].owner}`;\r\n            let win = window.open(path);\r\n            win.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:'center'}}>\r\n                <h1 className=\"page-header\" style={{marginBottom:'200px'}}>Pit Panda Mystic Search</h1>\r\n                <QueryBox query={this.updatePath}/>\r\n                <div style={{display:'inline-block',textAlign:'left',margin:'20px'}}>\r\n                    <StaticCard title=\"Results\">\r\n                        <MinecraftInventory style={{display:'block'}} key={this.state.queryString} inventory={this.state.results} onContextMenu={this.directToOwner} onClick={this.requestOwner} colors={true}/>\r\n                        {this.state.lastsize===pageSize&&this.state.results.length!==0&&!this.state.loading?\r\n                        <div style={{margin:'auto',textAlign:'center'}}>\r\n                            <button onClick={this.loadMore} className='srchBtn'>Load More</button>\r\n                        </div>:''}\r\n                    </StaticCard>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemSearch;","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\nfunction Nav(props){\r\n    function onClick(ref){\r\n        props.history.push(ref);\r\n    }\r\n    const buttons = [\r\n        {name:'Pit Panda',path:'/'},\r\n        {name:'Mystic Searcher',path:'/itemsearch'},\r\n        //{name:'Leaderboard (beta)',path:'/leaderboard'},\r\n    ];\r\n    const findBest = (path) => {\r\n        let best = 0;\r\n        for(let i = 0; i < buttons.length; i++){\r\n            if(path.startsWith(buttons[i].path)) best = i;\r\n        }\r\n        return best;\r\n    }\r\n    let [selected, setSelected] = useState(findBest(window.location.pathname));\r\n    useEffect(()=>{\r\n        return props.history.listen((location)=>setSelected(findBest(location.pathname)));\r\n    });\r\n    return (\r\n        <ul className='nav'>\r\n            {buttons.map((info,index)=>(\r\n                <li key={Date.now()+index} className={index===selected?'active':''} onClick={()=>onClick(info.path)}>{info.name}</li>\r\n            ))}\r\n        </ul>\r\n    );\r\n} export default withRouter(Nav);","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Link(props){\r\n    const onClick = e => {\r\n        if(!e.ctrlKey){\r\n            if(props.href!==window.location.pathname+window.location.search) props.history.push(props.href);\r\n        } \r\n        else window.open(`${window.location.origin}${props.href}`).focus();\r\n    }\r\n    return (\r\n        <span onClick={onClick} style={{cursor:'pointer',...(props.style||[])}}>\r\n            {props.children}\r\n        </span>\r\n    );\r\n} export default withRouter(Link);","import React, { useEffect, useState } from 'react';\r\nimport queryString from 'query-string';\r\nimport StaticCard from '../Cards/StaticCard';\r\nimport MinecraftText from '../Minecraft/MinecraftText';\r\nimport Link from '../Link/Link';\r\nimport { minutesToString, timeSince } from '../../scripts/frontendTools';\r\n\r\nfunction toString(n) {\r\n    return toFixed(0)(n);\r\n}\r\n\r\nfunction toFixed(places) {\r\n    return (n) => {\r\n        if (typeof n === 'number') return n.toLocaleString('en-US', {\r\n            minimumFractionDigits: places,\r\n            maximumFractionDigits: places,\r\n        });\r\n        else return n + '';\r\n    }\r\n}\r\n\r\nfunction toPercent(num) {\r\n    return toFixed(1)(num * 100) + '%';\r\n}\r\n\r\nconst boards = new Proxy({\r\n    kills: {\r\n        displayName: \"Top Kills\",\r\n        short: \"Kills\"\r\n    },\r\n    assists: {\r\n        displayName: \"Top Assists\",\r\n        short: \"Assists\"\r\n    },\r\n    damageDealt: {\r\n        displayName: \"Top Damage Dealt\",\r\n        short: \"Damage Dealt\"\r\n    },\r\n    damageReceived: {\r\n        displayName: \"Top Damage Received\",\r\n        short: \"Damage Received\"\r\n    },\r\n    damageRatio: {\r\n        displayName: \"Top Damage Ratio\",\r\n        short: \"Damage Ratio\",\r\n        transform: toFixed(2),\r\n        hidden: true\r\n    },\r\n    highestStreak: {\r\n        displayName: \"Top Streaks\",\r\n        short: \"Streaks\"\r\n    },\r\n    deaths: {\r\n        displayName: \"Top Deaths\",\r\n        short: \"Deaths\"\r\n    },\r\n    kdr: {\r\n        displayName: \"Top Kill Death Ratio\",\r\n        short: \"Kill Death Ratio\",\r\n        transform: toFixed(2),\r\n        hidden: true\r\n    },\r\n    xp: {\r\n        displayName: \"Top Total XP\",\r\n        short: \"Total XP\"\r\n    },\r\n    gold: {\r\n        displayName: \"Top Current Gold\",\r\n        short: \"Current Gold\"\r\n    },\r\n    lifetimeGold: {\r\n        displayName: \"Top Lifetime Gold Grinded\",\r\n        short: \"Lifetime Gold\"\r\n    },\r\n    playtime: {\r\n        displayName: \"Top Playtime\",\r\n        short: \"Playtime\",\r\n        transform: minutesToString\r\n    },\r\n    contracts: {\r\n        displayName: \"Top Contracts Completed\",\r\n        short: \"Contracts Completed\"\r\n    },\r\n    gapples: {\r\n        displayName: \"Top Golden Apples Eaten\",\r\n        short: \"Golden Apples\"\r\n    },\r\n    gheads: {\r\n        displayName: \"Top Golden Heads Eaten\",\r\n        short: \"Golden Heads\"\r\n    },\r\n    lavaBuckets: {\r\n        displayName: \"Top Lava Buckets Emptied\",\r\n        short: \"Lava Buckets\"\r\n    },\r\n    soups: {\r\n        displayName: \"Top Soups Drank\",\r\n        short: \"Soups Drank\"\r\n    },\r\n    tierOnes: {\r\n        displayName: \"Top Tier 1 Mystics Enchanted\",\r\n        short: \"Mystics Enchanted\",\r\n        hidden: true\r\n    },\r\n    tierTwos: {\r\n        displayName: \"Top Tier 2 Mystics Enchanted\",\r\n        short: \"Mystics Enchanted\",\r\n        hidden: true\r\n    },\r\n    tierThrees: {\r\n        displayName: \"Top Tier 3 Mystics Enchanted\",\r\n        short: \"Mystics Enchanted\"\r\n    },\r\n    darkPants: {\r\n        displayName: \"Top Dark Pants Created\",\r\n        short: \"Dark Pants Created\"\r\n    },\r\n    darkPantsT2: {\r\n        displayName: \"Top Dark Pants Created\",\r\n        short: \"Dark Pants Created\",\r\n        hidden: true\r\n    },\r\n    leftClicks: {\r\n        displayName: \"Top Left Clicks\",\r\n        short: \"Left Clicks\"\r\n    },\r\n    chatMessages: {\r\n        displayName: \"Top Chat Messages\",\r\n        short: \"Chat Messages\"\r\n    },\r\n    wheatFarmed: {\r\n        displayName: \"Top Wheat Farmed\",\r\n        short: \"Wheat Farmed\"\r\n    },\r\n    fishedAnything: {\r\n        displayName: \"Top Anything Fished\",\r\n        short: \"Anything Fished\"\r\n    },\r\n    blocksBroken: {\r\n        displayName: \"Top Blocks Broken\",\r\n        short: \"Blocks Broken\",\r\n        hidden: true\r\n    },\r\n    blocksPlaced: {\r\n        displayName: \"Top Blocks Placed\",\r\n        short: \"Blocks Placed\",\r\n        hidden: true\r\n    },\r\n    kingsQuests: {\r\n        displayName: \"Top Kings Quest Completions\",\r\n        short: \"Kings Quest\"\r\n    },\r\n    sewerTreasures: {\r\n        displayName: \"Top Sewer Treasures Found\",\r\n        short: \"Sewer Treasures\"\r\n    },\r\n    nightQuests: {\r\n        displayName: \"Top Night Quests Completed\",\r\n        short: \"Night Quests\"\r\n    },\r\n    renown: {\r\n        displayName: \"Top Current Renown\",\r\n        short: \"Current Renown\"\r\n    },\r\n    lifetimeRenown: {\r\n        displayName: \"Top Lifetime Renown Earned\",\r\n        short: \"Lifetime Renown\"\r\n    },\r\n    arrowShots: {\r\n        displayName: \"Top Arrows Shot\",\r\n        short: \"Arrows Shot\",\r\n        hidden: true\r\n    },\r\n    arrowHits: {\r\n        displayName: \"Top Arrow Hits\",\r\n        short: \"Arrow Hits\",\r\n        hidden: true\r\n    },\r\n    jumpsIntoPit: {\r\n        displayName: \"Top Jumps into Mid\",\r\n        short: \"Jumps into Mid\",\r\n        hidden: true\r\n    },\r\n    launcherLaunches: {\r\n        displayName: \"Top Launcher Launches\",\r\n        short: \"Launcher Launches\",\r\n        hidden: true\r\n    },\r\n    totalJumps: {\r\n        displayName: \"Top Entered Pit\",\r\n        short: \"Entered Pit\",\r\n        hidden: true\r\n    },\r\n    bounty: {\r\n        displayName: \"Top Bounties\",\r\n        short: \"Bounty\",\r\n        hidden: true\r\n    },\r\n    genesisPoints: {\r\n        displayName: \"Top Genesis Points\",\r\n        short: \"Genesis Points\",\r\n        hidden: true\r\n    },\r\n    joins: {\r\n        displayName: \"Top Joins to Pit\",\r\n        short: \"Joins\",\r\n        hidden: true\r\n    },\r\n    enderchestOpened: {\r\n        displayName: \"Top Enderchests Opened\",\r\n        short: \"Enderchests Opened\",\r\n        hidden: true\r\n    },\r\n    bowAccuracy: {\r\n        displayName: \"Top Bow Accuracy\",\r\n        short: \"Bow Accuracy\",\r\n        hidden: true\r\n    },\r\n    swordHits: {\r\n        displayName: \"Top Sword Hits\",\r\n        short: \"Enderchests Opened\",\r\n        hidden: true\r\n    },\r\n    meleeDamageDealt: {\r\n        displayName: \"Top Melee Damage Dealt\",\r\n        short: \"Melee Damage Dealt\",\r\n        hidden: true\r\n    },\r\n    meleeDamageReceived: {\r\n        displayName: \"Top Melee Damage Received\",\r\n        short: \"Melee Damage Received\",\r\n        hidden: true\r\n    },\r\n    meleeDamageRatio: {\r\n        displayName: \"Top Melee Damage Ratio\",\r\n        short: \"Melee Damage Ratio\",\r\n        hidden: true\r\n    },\r\n    bowDamageDealt: {\r\n        displayName: \"Top Bow Damage Dealt\",\r\n        short: \"Bow Damage Dealt\",\r\n        hidden: true\r\n    },\r\n    bowDamageReceived: {\r\n        displayName: \"Top Bow Damage Received\",\r\n        short: \"Bow Damage Dealt\",\r\n        hidden: true\r\n    },\r\n    bowDamageRatio: {\r\n        displayName: \"Top Bow Damage Ratio\",\r\n        short: \"Bow Damage Ratio\",\r\n        hidden: true\r\n    },\r\n    diamondItemsPurchased: {\r\n        displayName: \"Top Diamond Items Purchased\",\r\n        short: \"Diamond Items Purchased\",\r\n        hidden: true\r\n    },\r\n    fishedFish: {\r\n        displayName: \"Top Fishes Fished\",\r\n        short: \"Fishes Fished\",\r\n        hidden: true\r\n    },\r\n    hiddenJewelsTriggered: {\r\n        displayName: \"Top Hidden Jewels Triggered\",\r\n        short: \"Hidden Jewels Triggered\",\r\n        hidden: true\r\n    },\r\n    xpHourly: {\r\n        displayName: \"Top XP Per Hour\",\r\n        short: \"XP/Hour\",\r\n        hidden: true\r\n    },\r\n    goldHourly: {\r\n        displayName: \"Top Gold Per Hour\",\r\n        short: \"Gold/Hour\",\r\n        hidden: true\r\n    },\r\n    fishingRodCasts: {\r\n        displayName: \"Top Fishing Rod Casts\",\r\n        short: \"Fishing Rod Casts\",\r\n        hidden: true\r\n    },\r\n    kadr: {\r\n        displayName: \"Top Kills + Assists / Death Ratio\",\r\n        short: \"KADR\",\r\n        hidden: true\r\n    },\r\n    killAssistHourly: {\r\n        displayName: \"Top Kills + Assists per Hour\",\r\n        short: \"Kills + Assists per Hour\",\r\n        hidden: true\r\n    },\r\n    killsHourly: {\r\n        displayName: \"Top Kills per Hour\",\r\n        short: \"Kills per Hour\",\r\n        hidden: true\r\n    },\r\n    contractsStarted: {\r\n        displayName: \"Top Contracts Started\",\r\n        short: \"Contracts Started\",\r\n        hidden: true\r\n    },\r\n    contractsRatio: {\r\n        displayName: \"Top Contracts Success Rate\",\r\n        short: \"Contract Success Rate\",\r\n        hidden: true,\r\n        transform: toPercent\r\n    },\r\n    error: {\r\n        displayName: \"Invalid Leaderboard\",\r\n        short: \"Error\",\r\n        hidden: true\r\n    },\r\n    default: {\r\n        displayName: \"Leaderboard Name\",\r\n        short: \"Category\",\r\n        transform: toString,\r\n        hidden: true\r\n    }\r\n}, {\r\n    get: (target, prop) => {\r\n        if (!(prop in target)) prop = 'error';\r\n        return new Proxy(target[prop], {\r\n            get: (subTarget, subProp) => {\r\n                if (subProp in subTarget) return subTarget[subProp];\r\n                else return target.default[subProp];\r\n            }\r\n        });\r\n    },\r\n    ownKeys: (target) => {\r\n        return Object.entries(target)\r\n            .filter(([, { hidden }]) => !hidden)\r\n            .sort((a, b) => a[1].short < b[1].short ? -1 : 1)\r\n            .map(e => e[0]);\r\n    }\r\n});\r\n\r\nasync function getLeaderboard({ category = 'xp', page = 0 }) {\r\n    try {\r\n        const pageRequest = await fetch(`/api/leaderboard/${category}?page=${page}`);\r\n        const json = await pageRequest.json();\r\n        console.log(json);\r\n        if (!json.success) return { error: (json.error || 'An error occured') };\r\n        return json.leaderboard;\r\n    } catch (e) {\r\n        return { error: e };\r\n    }\r\n}\r\n\r\nasync function getIndexerStatus() {\r\n    const response = await fetch('/api/indexer');\r\n    if (!response.ok) return null;\r\n    const data = await response.json();\r\n\r\n    return data.data;\r\n}\r\n\r\nfunction getQuery(search) {\r\n    let query = queryString.parse(search);\r\n    return { category: query.category || 'xp', page: query.page || 0 };\r\n}\r\n\r\nfunction Leaderboard(props) {\r\n    const [target, setTarget] = useState(getQuery(props.location.search));\r\n    const [data, setData] = useState({ entires: [], loadedType: 'xp' });\r\n    const [indexData, setIndexData] = useState(\r\n        { \r\n            finished: false, \r\n            currentPosition: 0, \r\n            estimatedCount: 0, \r\n            info: { \r\n                currentQueueCount: 0, \r\n                maxBatchSize: 1, \r\n                maxQueueSize: 1000, \r\n                batchTimeout: 1000, \r\n                lastQueueChange: 0 \r\n            } \r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        return props.history.listen(\r\n            async location => setTarget(getQuery(location.search))\r\n        );\r\n    });\r\n\r\n    useEffect(() => {\r\n        let alive = true;\r\n        (async () => {\r\n            let stats = await getLeaderboard(target);\r\n            if (alive) {\r\n                if (stats.error) setData({ entires: [], loadedType: target.category });\r\n                else setData({ entires: stats, loadedType: target.category });\r\n                const data = await getIndexerStatus();\r\n                setIndexData({ finished: true, ...data });\r\n            }\r\n        })();\r\n        return () => alive = false;\r\n    }, [target]);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"page-header\" style={{ marginBottom: '100px', textAlign: 'center' }}>Pit Panda Leaderboards</h1>\r\n            <div style={{ textAlign: 'left', width: '1020px', margin: 'auto' }}>\r\n                <div style={{ display: 'inline-block', verticalAlign: 'top', marginRight: '20px' }}>\r\n                    <StaticCard title=\"Leaderboard Selector\" style={{ width: '350px' }}>\r\n                        {Reflect.ownKeys(boards).map(key => {\r\n                            const target = boards[key];\r\n                            return (\r\n                                <div key={key}>\r\n                                    <Link href={`/leaderboard?category=${key}&page=0`}>\r\n                                        <MinecraftText text={target.short} />\r\n                                    </Link>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </StaticCard>\r\n\r\n                    <StaticCard title=\"Indexer Status\" style={{ width: '350px' }}>\r\n                        <MinecraftText className='text-title' style={{ color: indexData.finished ? 'green' : 'red' }} text={indexData.finished ? 'Online' : 'Offline'} /><br />\r\n                        <MinecraftText text={`Last queue batch ${timeSince(indexData.info.lastQueueChange)} ago`} />\r\n                        <MinecraftText text={`Current Position`} /> <MinecraftText style={{ color: 'gold' }} text={`${indexData.currentPosition.toLocaleString()} / ${indexData.estimatedCount.toLocaleString()}`} /><br />\r\n                        <br />\r\n                        <MinecraftText text={`More Stats`} style={{ color: 'green' }} />\r\n                        <br />\r\n                        <MinecraftText text={`Max Batch Size: ${indexData.info.maxBatchSize}`} /><br />\r\n                        <MinecraftText text={`Max Queue Size: ${indexData.info.maxQueueSize}`} /><br />\r\n                        <MinecraftText text={`Batch Timeout: ${indexData.info.batchTimeout}`} /><br />\r\n                        <MinecraftText text={`Current Queue Iteration: ${indexData.info.currentQueueCount}`} />\r\n\r\n                    </StaticCard>\r\n                </div>\r\n\r\n                <StaticCard title={boards[data.loadedType].displayName} style={{ width: '650px', display: 'inline-block' }}>\r\n                    {data.entires.map((user, index) => (\r\n                        <div key={user.uuid} style={{ borderTop: (index !== 0 ? '2px solid #444' : 'none'), padding: '5px' }}>\r\n                            <MinecraftText style={{ width: '10%', textAlign: 'center', display: 'inline-block' }} text={`#${target.page * 100 + index + 1}`} />\r\n                            <Link href={`/players/${user.uuid}`}>\r\n                                <MinecraftText raw={user.name} style={{ width: '50%' }} />\r\n                            </Link>\r\n                            <MinecraftText text={boards[data.loadedType].transform(user.score)} style={{ width: '40%', textAlign: 'right', paddingRight: '8px' }} />\r\n                        </div>\r\n                    ))}\r\n                </StaticCard>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Leaderboard;","// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Switch, Route, withRouter, Redirect } from 'react-router-dom';\r\nimport './index.css';\r\nimport Player from './Components/Apps/Player';\r\nimport PlayerForm from './Components/Apps/PlayerForm';\r\nimport ItemSearch from './Components/Apps/ItemSearch';\r\nimport Nav from './Components/Nav/Nav';\r\nimport Leaderboard from './Components/Apps/Leaderboard';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nserviceWorker.unregister();\r\n\r\nReactDOM.render((\r\n    <>\r\n        <BrowserRouter>\r\n            <Nav/>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={withRouter(PlayerForm)}/>\r\n                <Route exact path=\"/leaderboard\" component={withRouter(Leaderboard)}/>\r\n                <Route exact path=\"/players/:id\" component={withRouter(Player)}/>\r\n                <Route exact path=\"/itemsearch/:query?\" component={withRouter(ItemSearch)}/>\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </>\r\n), document.getElementById('root'));"],"sourceRoot":""}