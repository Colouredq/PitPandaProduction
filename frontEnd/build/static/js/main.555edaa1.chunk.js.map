{"version":3,"sources":["scripts/frontendTools.js","scripts/colorCodes.js","Components/Cards/StaticCard.js","Components/Cards/TabbedCard.js","Components/Cards/NumberedCard.js","Components/Minecraft/MinecraftText.js","Components/Minecraft/MinecraftItemDescription.js","Components/Minecraft/MinecraftItemImg.js","Components/Minecraft/MinecraftItemSlot.js","Components/Minecraft/MinecraftInventory.js","Components/ProgressBar/ProgressBar.js","Components/Apps/PlayerForm.js","Components/PlayerList/PlayerEntry.js","Components/PlayerList/PlayerList.js","Components/Apps/Player.js","Components/SearchField/SearchField.js","Components/QueryBox/QueryBox.js","Components/Apps/ItemSearch.js","Components/Nav/Nav.js","index.js"],"names":["pitMaster","require","Colors","Extra","ColorCodes","romanNumGen","int","roman","repeat","module","exports","levelString","prestige","level","lc","Pit","Levels","Math","floor","ColorCode","GRAY","RESET","pc","Prestiges","YELLOW","minutesToString","min","str","timeSince","date","seconds","Date","interval","abbrNum","number","decPlaces","pow","abbrev","i","length","size","round","currId","obfuscators","alreadyParsed","styleMap","obfuscate","elem","string","multiMagic","currNode","listLen","nodeI","replaceRand","max","randChar","String","fromCharCode","random","substr","initMagic","el","obsStr","innerHTML","strLen","push","window","setInterval","indexOf","childNodes","nodeType","document","createElement","nodeValue","replaceChild","applyCode","codes","obfuscated","forEach","code","style","cssText","input","parsed","id","contains","clearInterval","indexDelta","strSlice","finalPre","match","codesLen","indexes","apply","replace","appendChild","substring","lastIndexOf","slice","parseStyle","raw","StaticCard","className","this","props","title","content","children","React","Component","TabbedCard","state","selected","onClick","e","preventDefault","setState","tabs","map","tab","borderBottom","key","NumberedCard","numberOnClick","position","first","prev","last","next","start","end","display","float","width","marginLeft","Fragment","margin","justifyContent","_","MinecraftText","text","dangerouslySetInnerHTML","__html","PureComponent","MinecraftItemDescription","onclick","marginBottom","name","description","line","mapped","MinecraftItemImg","meta","count","inner","JSON","parse","stringify","includes","backgroundColor","memo","cls","item","desc","colors","some","toLowerCase","onContextMenu","MinecraftInventory","rows","len","inventory","toFill","ceil","filler","Array","fill","maxWidth","index","uuid","blank","ProgressBar","info","hover","message","percent","type","minWidth","verticalAlign","height","paddingTop","PlayerForm","handleSubmit","srch","target","srchInp","value","trim","history","onSubmit","placeholder","PlayerList","useState","setText","getUser","then","href","knownplayers","clone","players","tmpGroupQueue","splice","groupQueue","setGroupQueue","hasMore","setHasMore","initiated","setInitiated","loaded","setLoaded","initiate","loadMore","concat","promise","Promise","resolve","fetch","res","json","console","log","success","catch","err","instant","player","PlayerEntry","tag","textAlign","marginTop","Player","user","loadUser","path","startsWith","data","error","undefined","params","unlisten","listen","location","pathname","src","alt","fontSize","formattedName","formattedLevel","currentGold","toLocaleString","frontendTools","playtime","profileDisplay","url","linkTitle","scammer","notes","discordid","alts","main","color","online","lastSave","bounty","xpProgress","goldProgress","renownProgress","recentKills","kill","victim","timestamp","inventories","marginRight","armor","enderchest","stash","well","perks","upgrades","renownShop","generalStats","prestiges","gold","unlocks","reverse","displayName","tier","SearchField","activeSuggestion","filteredSuggestions","showSuggestions","userInput","says","reporting","userNumber","showNumber","numRef","createRef","onChange","suggestions","currentTarget","split","filter","test","join","suggestion","Name","Boolean","find","s","NoNumber","reportString","onNumberChange","select","getAttribute","setTimeout","current","focus","Type","onKeyDown","keyCode","shiftKey","up","down","onKeyDownNumber","mainRef","onBlur","timeOutFix","report","suggestionsListComponent","tabIndex","ref","Mystics","pants","sword","bow","lives","maxLives","tokens","artifact","rare","legendary","bountiful","extraordinary","unthinkable","overpowered","miraculous","million","nonce","red","yellow","blue","orange","green","valid","formatted","Object","entries","ench","sort","a","b","createInputData","v4","QueryBox","inputs","buttonRef","killInput","clearTimeout","timeout","monitorInputs","foundType","buildAndSendQuery","queryString","query","c","ItemSearch","results","fake","loading","lastsize","knownUUIDS","page","readyItems","items","result","updatePath","requestOwner","checked","owner","targets","unshift","lastseen","directToOwner","ctrlKey","origin","open","withRouter","buttons","findBest","best","setSelected","useEffect","now","ReactDOM","render","exact","component","to","getElementById"],"mappings":"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","file":"static/js/main.555edaa1.chunk.js","sourcesContent":["const pitMaster = require('../pitMaster.json');\r\nconst Colors = pitMaster.Extra.ColorCodes;\r\n\r\n\r\n/**\r\n * Formats level like ingame\r\n * @param {number} prestige \r\n * @param {number} level \r\n * @returns {string} minecraft color formatted string\r\n */\r\nfunction levelString(prestige,level){\r\n    let lc = pitMaster.Pit.Levels[Math.floor(level/10)].ColorCode;\r\n    if(prestige===0) return Colors.GRAY+'['+lc+level+Colors.RESET+Colors.GRAY+']';\r\n    let pc=pitMaster.Pit.Prestiges[prestige].ColorCode;\r\n    return pc+'['+Colors.YELLOW+romanNumGen(prestige)+pc+'-'+lc+level+Colors.RESET+pc+']';\r\n} module.exports.levelString = levelString;\r\n\r\n/**\r\n * Turns an time into a formatter string\r\n * ex: f(1234) = '20h 34m'\r\n * @param {number} minutes \r\n * @returns {string}\r\n */\r\nfunction minutesToString(min){\r\n    if(min < 60) return `${min}m`;\r\n    let str = `${Math.floor(min/60)}h`;\r\n    if(min%60!==0) str+=` ${Math.floor(min%60)}m`;\r\n    return str;\r\n} module.exports.minutesToString = minutesToString;\r\n\r\n/**\r\n * Produces a nicely formatted string of the time since a given date in unix epoch seconds\r\n * @param {number} date \r\n * @returns {string}\r\n */\r\nfunction timeSince(date) { // https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site\r\n    var seconds = Math.floor((new Date() - date) / 1000);\r\n    var interval = Math.floor(seconds / 31536000);\r\n    if (interval > 1) {\r\n        return interval + \" years\";\r\n    }\r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n        return interval + \" months\";\r\n    }\r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n        return interval + \" days\";\r\n    }\r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n        return interval + \" hours\";\r\n    }\r\n    interval = Math.floor(seconds / 60);\r\n    if (interval < 5) {\r\n        return \"moments\";\r\n    }\r\n    if (interval > 1) {\r\n        return interval + \" minutes\";\r\n    }\r\n    return Math.floor(seconds) + \" seconds\";\r\n} module.exports.timeSince = timeSince;\r\n\r\n/**\r\n * converts number to roman numeral string\r\n * @param {number} int\r\n * @returns {string} \r\n */\r\nfunction romanNumGen(int) { //code also in apiTools.js\r\n    let roman = '';\r\n    roman +=  'M'.repeat(int / 1000);  int %= 1000; \r\n    roman += 'CM'.repeat(int / 900);   int %= 900; \r\n    roman +=  'D'.repeat(int / 500);   int %= 500;  \r\n    roman += 'CD'.repeat(int / 400);   int %= 400;\r\n    roman +=  'C'.repeat(int / 100);   int %= 100;\r\n    roman += 'XC'.repeat(int / 90);    int %= 90;\r\n    roman +=  'L'.repeat(int / 50);    int %= 50;\r\n    roman += 'XL'.repeat(int / 40);    int %= 40;\r\n    roman +=  'X'.repeat(int / 10);    int %= 10;\r\n    roman += 'IX'.repeat(int / 9);     int %= 9;\r\n    roman +=  'V'.repeat(int / 5);     int %= 5;\r\n    roman += 'IV'.repeat(int / 4);     int %= 4;\r\n    roman +=  'I'.repeat(int);\r\n    return roman;\r\n} module.exports.romanNumGen = romanNumGen;\r\n\r\n/**\r\n * Formats numbers nicely ex: f(1234, 2) = 1.2k\r\n * @param {number} number \r\n * @param {number} decPlaces \r\n * @returns {string}\r\n */\r\nfunction abbrNum(number, decPlaces) { //https://stackoverflow.com/questions/2685911/is-there-a-way-to-round-numbers-into-a-reader-friendly-format-e-g-1-1k\r\n    // 2 decimal places => 100, 3 => 1000, etc\r\n    decPlaces = Math.pow(10,decPlaces);\r\n\r\n    // Enumerate number abbreviations\r\n    var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\r\n\r\n    // Go through the array backwards, so we do the largest first\r\n    for (var i=abbrev.length-1; i>=0; i--) {\r\n\r\n        // Convert array index to \"1000\", \"1000000\", etc\r\n        var size = Math.pow(10,(i+1)*3);\r\n\r\n        // If the number is bigger or equal do the abbreviation\r\n        if(size <= number) {\r\n             // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n             // This gives us nice rounding to a particular decimal place.\r\n             number = Math.round(number*decPlaces/size)/decPlaces;\r\n\r\n             // Handle special case where we round up to the next abbreviation\r\n             if((number === 1000) && (i < abbrev.length - 1)) {\r\n                 number = 1;\r\n                 i++;\r\n             }\r\n\r\n             // Add the letter for the abbreviation\r\n             number += abbrev[i];\r\n\r\n             // We are done... stop\r\n             break;\r\n        }\r\n    }\r\n\r\n    return number;\r\n} module.exports.abbrNum = abbrNum;","//I was sent this code by jackson#0001 idk if its his but sure aint mine. \r\nlet currId = 0,\r\n    obfuscators = {},\r\n    alreadyParsed = [],\r\n    styleMap = {\r\n        '§0': 'color:#FFFFFF',\r\n        '§1': 'color:#0000AA',\r\n        '§2': 'color:#00AA00',\r\n        '§3': 'color:#00AAAA',\r\n        '§4': 'color:#AA0000',\r\n        '§5': 'color:#AA00AA',\r\n        '§6': 'color:#FFAA00',\r\n        '§7': 'color:#999999',\r\n        '§8': 'color:#3f3f3f',\r\n        '§9': 'color:#5555FF',\r\n        '§a': 'color:#55FF55',\r\n        '§b': 'color:#55FFFF',\r\n        '§c': 'color:#FF5555',\r\n        '§d': 'color:#FF55FF',\r\n        '§e': 'color:#FFFF55',\r\n        '§f': 'color:#FFFFFF',\r\n        '§l': 'font-weight:bold',\r\n        '§m': 'text-decoration:line-through',\r\n        '§n': 'text-decoration:underline',\r\n        '§o': 'font-style:italic'\r\n    };\r\n\r\nconst obfuscate = (elem, string) => {\r\n    let multiMagic,\r\n        currNode,\r\n        listLen,\r\n        nodeI;\r\n\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    const replaceRand = (string, i) => {\r\n        var randChar = String.fromCharCode(randInt(64, 95));\r\n        return string.substr(0, i) + randChar + string.substr(i + 1, string.length);\r\n    }\r\n\r\n    const initMagic = (el, str) => {\r\n        var i = 0,\r\n            obsStr = str || el.innerHTML,\r\n            strLen = obsStr.length;\r\n        if (!strLen) return;\r\n        obfuscators[currId].push(\r\n            window.setInterval(function () {\r\n                if (i >= strLen) i = 0;\r\n                obsStr = replaceRand(obsStr, i);\r\n                el.innerHTML = obsStr;\r\n                i++;\r\n            }, 0)\r\n        );\r\n    }\r\n\r\n    if (string.indexOf('<br>') > -1) {\r\n        elem.innerHTML = string;\r\n        listLen = elem.childNodes.length;\r\n        for (nodeI = 0; nodeI < listLen; nodeI++) {\r\n            currNode = elem.childNodes[nodeI];\r\n            if (currNode.nodeType === 3) {\r\n                multiMagic = document.createElement('span');\r\n                multiMagic.innerHTML = currNode.nodeValue;\r\n                elem.replaceChild(multiMagic, currNode);\r\n                initMagic(multiMagic);\r\n            }\r\n        }\r\n    } else {\r\n        initMagic(elem, string);\r\n    }\r\n}\r\n\r\nconst applyCode = (string, codes) => {\r\n    var elem = document.createElement('span'),\r\n        obfuscated = false;\r\n\r\n    //string = string.replace(/\\x00/g, '');\r\n\r\n    codes.forEach(function (code) {\r\n        elem.style.cssText += styleMap[code] + ';';\r\n        if (code === '§k') {\r\n            obfuscate(elem, string);\r\n            obfuscated = true;\r\n        }\r\n    });\r\n\r\n    if (!obfuscated) elem.innerHTML = string;\r\n\r\n    return elem;\r\n}\r\n\r\nconst parseStyle = (string) => {\r\n    var finalPre = document.createElement('pre'),\r\n        codes = string.match(/§.{1}/g) || [],\r\n        codesLen = codes.length,\r\n        indexes = [],\r\n        indexDelta,\r\n        apply = [],\r\n        strSlice,\r\n        i;\r\n\r\n    if (!obfuscators[currId]) obfuscators[currId] = [];\r\n\r\n    string = string.replace(/\\n|\\\\n/g, '<br>');\r\n\r\n    for (i = 0; i < codesLen; i++) {\r\n        indexes.push(string.indexOf(codes[i]));\r\n        string = string.replace(codes[i], '\\x00\\x00');\r\n    }\r\n\r\n    if (indexes[0] !== 0) {\r\n        finalPre.appendChild(applyCode(string.substring(0, indexes[0]), []));\r\n    }\r\n\r\n    for (i = 0; i < codesLen; i++) {\r\n        indexDelta = indexes[i + 1] - indexes[i];\r\n        if (indexDelta === 2) {\r\n            while (indexDelta === 2) {\r\n                apply.push(codes[i]);\r\n                i++;\r\n                indexDelta = indexes[i + 1] - indexes[i];\r\n            }\r\n            apply.push(codes[i]);\r\n        } else {\r\n            apply.push(codes[i]);\r\n        }\r\n        if (apply.lastIndexOf('§r') > -1) {\r\n            apply = apply.slice(apply.lastIndexOf('§r') + 1);\r\n        }\r\n        strSlice = string.substring(indexes[i], indexes[i + 1]);\r\n        finalPre.appendChild(applyCode(strSlice, apply));\r\n    }\r\n\r\n    return finalPre;\r\n}\r\n\r\nconst clearObfuscators = (id) => {\r\n    obfuscators[id].forEach((interval) => {\r\n        clearInterval(interval);\r\n    });\r\n    alreadyParsed[id] = [];\r\n    obfuscators[id] = [];\r\n}\r\n\r\nconst mineParse = (input) => {\r\n    var parsed,\r\n        i = currId;\r\n    if (i > 0) {\r\n        while (i--) {\r\n            if (alreadyParsed[i].nodeType) {\r\n                if (!document.contains(alreadyParsed[i])) {\r\n                    clearObfuscators(i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    parsed = parseStyle(input);\r\n    alreadyParsed.push(parsed);\r\n    currId++;\r\n    return {\r\n        parsed: parsed,\r\n        raw: parsed.innerHTML\r\n    };\r\n};\r\n\r\nmodule.exports = mineParse; ","import React from 'react';\r\nimport './cardStyles.css';\r\n\r\nclass StaticCard extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"Card\" style={this.props.style}>\r\n            <div className=\"Card-Head\">\r\n                {this.props.title}\r\n            </div>\r\n            <div className=\"Card-Body\">\r\n                {this.props.content||this.props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaticCard;\r\n","import React from 'react';\r\nimport './cardStyles.css'\r\n\r\nclass TabbedCard extends React.Component {\r\n\r\n    state = {selected:0};\r\n\r\n    onClick = (id,e) => {\r\n        e.preventDefault();\r\n        this.setState({selected:id});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Card\">\r\n                <div className=\"Card-Head\">\r\n                    <ul>\r\n                        {this.props.tabs.map((tab,i)=>(\r\n                            <li style={{borderBottom: (i===this.state.selected)?'2px solid #999999':'none'}} key={i} onClick={e => this.onClick(i,e)}>\r\n                                {tab}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"Card-Body\">\r\n                    {this.props.content[this.state.selected]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabbedCard;\r\n","import React from 'react';\r\nimport './cardStyles.css';\r\n\r\nclass NumberedCard extends React.Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={selected:this.props.content.length-1};\r\n    }\r\n\r\n    numberOnClick = position => this.setState({selected:position});\r\n    first = () => this.setState({selected:0});\r\n    prev = () => this.setState({selected:this.state.selected-1});\r\n    last = () => this.setState({selected:this.props.content.length-1});\r\n    next = () => this.setState({selected:this.state.selected+1});\r\n\r\n    render() {\r\n        let start = Math.max(0,this.state.selected-2);\r\n        let end = Math.min(this.state.selected+3,this.props.content.length);\r\n        if(start===0) end = Math.min(5,this.props.content.length);\r\n        else if(end===this.props.content.length) start = Math.max(0,this.props.content.length-5);\r\n        return (\r\n            <div className=\"Card\" style={this.props.style}>\r\n                <div className=\"Card-Head\">\r\n                    <div style={{display:'inline-block'}}>Prestige History</div>\r\n                    {(this.props.content.length>1)?(\r\n                    <div style={{display:'inline-block',float:'none',width:'60%',marginLeft:'20px'}}>\r\n                        <div style={{display:'inline-block',width:'50px'}}>\r\n                            {(start!==0)?(\r\n                            <React.Fragment>\r\n                                <div onClick={this.first} className='CardTitle'>&lt;&lt;</div>\r\n                                <div onClick={this.prev} className='CardTitle'>&lt;</div>\r\n                            </React.Fragment>\r\n                            ):''}\r\n                        </div>\r\n                        <div style={{display:'inline-block',width:'235px'}}>\r\n                            <div style={{margin:'0px 10px',display:'flex',justifyContent:'center'}}>\r\n                                {this.props.content.slice(start,end).map((_,i)=>{\r\n                                        const position = i+start;\r\n                                        return (\r\n                                            <div className='CardTitle' key={position} onClick={() => this.numberOnClick(position)}>\r\n                                                <span style={{borderBottom: (position===this.state.selected)?'2px solid #999999':'none'}}>{position}</span>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display:'inline-block',width:'50px'}}>\r\n                            {(end!==this.props.content.length)?(\r\n                                <React.Fragment>\r\n                                    <div className='CardTitle' onClick={this.next}>&gt;</div>\r\n                                    <div className='CardTitle' onClick={this.last}>&gt;&gt;</div>\r\n                                </React.Fragment>\r\n                            ):''}\r\n                        </div>\r\n                    </div>):''}\r\n                </div>\r\n                <div className=\"Card-Body\">\r\n                    {this.props.content[this.state.selected]}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberedCard;\r\n","import React from 'react';\r\nimport parseStyle from '../../scripts/colorCodes.js';\r\nimport './minecraftStyles.css';\r\n\r\nclass MinecraftText extends React.PureComponent{\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.raw!==state.raw||props.text){\r\n            if(props.text){\r\n                state.text = props.text;\r\n            }else{\r\n                state.text = parseStyle(props.raw).raw;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n\r\n    state={raw:this.props.raw,text:this.props.raw?parseStyle(this.props.raw).raw:this.props.text};\r\n\r\n    render(){\r\n        return (\r\n            <span className={`MinecraftText ${this.props.className}`} style={this.props.style} dangerouslySetInnerHTML={{__html:this.state.text}} onClick={this.props.onClick}></span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftText;\r\n","import React from 'react';\r\nimport MinecraftText from './MinecraftText';\r\nimport './minecraftStyles.css';\r\n\r\nclass MinecraftItemDescription extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mctooltip\" style={this.props.style} onClick={this.props.onclick}>\r\n                <MinecraftText style={{marginBottom:'3px'}} className='text-title' raw={this.props.name}/> <br/>\r\n                {this.props.description.map((line,i)=>\r\n                    <React.Fragment key={i}>\r\n                        <MinecraftText raw={line}/><br/>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftItemDescription;","import React from 'react';\r\nimport './itemStyles.css';\r\nimport './minecraftStyles.css';\r\n\r\nconst mapped = [\r\n    'ffAA00',\r\n    '55FF55',\r\n    '5555FF',\r\n    'FFFF55',\r\n    'FF5555',\r\n    '55FFFF',\r\n    '7DC383',\r\n    '000000'\r\n];\r\n\r\nfunction MinecraftItemImg(props){\r\n    const {id = 0, meta = 0, count = 1} = props;\r\n    const inner = (count>1)?<span className='textshadow count'>{count}</span>:'';\r\n    let style = JSON.parse(JSON.stringify((props.style || {})));\r\n    if(id>=298&&id<=301&&!(id===300&&mapped.includes(meta))){//leather items\r\n        style.backgroundColor = `#${meta}`;\r\n        return (\r\n            <div className={`item_ item_${id}  ${count===0?'grey':''}`} style={style} children={inner}/>\r\n        );\r\n    }else{\r\n        return (\r\n            <div className={`item_ item_${id} item_${id}_${meta} ${count===0?'darken':''}`} style={style} children={inner}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftItemImg;\r\n","import React from 'react';\r\nimport MinecraftItemDescription from './MinecraftItemDescription';\r\nimport MinecraftItemImg from './MinecraftItemImg';\r\nimport './minecraftStyles.css';\r\n\r\n/*\r\nclass MinecraftItemSlot extends React.PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        const {name = '', desc = []} = this.props.item;\r\n        let cls = '';\r\n        if(props.colors){\r\n            if(desc.some(line=>line.includes('RARE'))) cls = 'rare';\r\n            if(name.toLowerCase().includes('bountiful')) cls = 'bountiful';\r\n            if(name.toLowerCase().includes('legendary')) cls = 'legendary';\r\n            if(name.toLowerCase().includes('extraordinary')) cls = 'extraordinary';\r\n            if(name.toLowerCase().includes('evil')) cls = 'evil';\r\n            if(name.toLowerCase().includes('artifact')) cls = 'artifact';\r\n            if(name.toLowerCase().includes('miraculous')) cls = 'miraculous';\r\n            if(name.toLowerCase().includes('overpowered')) cls = 'overpowered';\r\n        }\r\n        this.state.cls = cls;\r\n    }\r\n\r\n    render() {\r\n        console.log('ITEM RENDER');\r\n        const {name = '', desc = [], id=0, meta=0, count=1} = this.props.item;\r\n        return (\r\n            <div className={`item ${this.cls}`} onClick={this.props.onClick}>\r\n                <MinecraftItemImg id={id} meta={meta} count={count}/>\r\n                {\r\n                    (name.length>0||desc.length>0)?\r\n                    <div className={`itemcontainer ${count===0?'halfgrey':''}`}>\r\n                        <MinecraftItemDescription name={name} description={desc}/>\r\n                    </div>:''\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}*/\r\n\r\nfunction MinecraftItemSlot(props){\r\n    let cls = '';\r\n    const {name = '', desc = [], id=0, meta=0, count=1} = props.item;\r\n    if(props.colors){\r\n        if(desc.some(line=>line.includes('RARE'))) cls = 'rare';\r\n        if(name.toLowerCase().includes('bountiful')) cls = 'bountiful';\r\n        if(name.toLowerCase().includes('legendary')) cls = 'legendary';\r\n        if(name.toLowerCase().includes('extraordinary')) cls = 'extraordinary';\r\n        if(name.toLowerCase().includes('unthinkable')) cls = 'unthinkable';\r\n        if(name.toLowerCase().includes('evil')) cls = 'evil';\r\n        if(name.toLowerCase().includes('artifact')) cls = 'artifact';\r\n        if(name.toLowerCase().includes('miraculous')) cls = 'miraculous';\r\n        if(name.toLowerCase().includes('overpowered')) cls = 'overpowered';\r\n    }\r\n    return (\r\n        <div className={`item ${cls}`} onClick={props.onClick} onContextMenu={props.onContextMenu}>\r\n            <MinecraftItemImg id={id} meta={meta} count={count}/>\r\n            {\r\n                (name.length>0||desc.length>0)?\r\n                <div className={`itemcontainer ${count===0?'halfgrey':''}`}>\r\n                    <MinecraftItemDescription name={name} description={desc}/>\r\n                </div>:''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(MinecraftItemSlot);","import React from 'react';\r\nimport MinecraftItemSlot from './MinecraftItemSlot';\r\nimport './minecraftStyles.css';\r\n\r\nclass MinecraftInventory extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const width = props.width || 9;\r\n        const rows = props.rows || 1;\r\n        let len = (props.inventory || []).length;\r\n        const toFill = Math.max(\r\n            rows*width-len,\r\n            width*Math.ceil(len/width)-len\r\n        );\r\n        let filler = new Array(toFill).fill({});\r\n        let style = {...props.style} || {};\r\n        style.maxWidth=`${55.4*width}px`;\r\n        this.state = {\r\n            inventory: props.inventory,\r\n            width,\r\n            style,\r\n            filler\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        if(props.inventory===state.inventory)return state;\r\n        const width = props.width || 9;\r\n        const rows = props.rows || 1;\r\n        let len = (props.inventory || []).length;\r\n        const toFill = Math.max(\r\n            rows*width-len,\r\n            width*Math.ceil(len/width)-len\r\n        );\r\n        let filler;\r\n        if(toFill===state.filler.length) filler = state.filler;\r\n        else filler = new Array(toFill).fill({});\r\n        let style = props.style || {};\r\n        style.maxWidth=`${55.4*width}px`;\r\n        return {\r\n            inventory: props.inventory,\r\n            width,\r\n            style,\r\n            filler\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.state.style} className=\"MinecraftInventory\">\r\n                {(this.state.inventory||[]).map((item,index)=>(\r\n                    <MinecraftItemSlot \r\n                        key={(item.uuid||'')+index} item={item} colors={this.props.colors}\r\n                        onClick={this.props.onClick?e=>this.props.onClick(index,e):()=>{}}\r\n                        onContextMenu={this.props.onContextMenu?e=>this.props.onContextMenu(index,e):()=>{}}\r\n                    />\r\n                ))}\r\n                {this.state.filler.map((blank,index)=>(\r\n                    <MinecraftItemSlot \r\n                        key={'filler'+index} item={blank} \r\n                        onClick={this.props.onClick?e=>this.props.onClick(index,e):()=>{}} \r\n                        onContextMenu={this.props.onContextMenu?e=>this.props.onContextMenu(index,e):()=>{}}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MinecraftInventory;","import React from 'react';\r\nimport './ProgressBar.css';\r\nimport MinecraftText from './../Minecraft/MinecraftText';\r\nimport MinecraftItemImg from './../Minecraft/MinecraftItemImg';\r\n\r\nclass ProgressBar extends React.Component {\r\n    render() {\r\n        const {info, item} = this.props;\r\n        const hover = info.message || Math.round(info.percent*1000)/10 + '%';\r\n        return (\r\n            <div title={hover} className=\"ProgressBar\" style={this.props.style}>\r\n                <div className={`progress-icon ${this.props.type}bg`}>\r\n                    <MinecraftItemImg {...item}/>\r\n                </div>\r\n                <div style={{display:'inline-block',minWidth:'270px',verticalAlign:'top',height:'40px',paddingTop:'3px'}}>\r\n                    <MinecraftText text={this.props.title} className=\"progress-name\"/>\r\n                    <div className=\"progress-bar\">\r\n                        <div className={`progress-bar-progress ${this.props.type}bg`} style={{width:(Math.min(info.percent,1)*97+3)+'%'}}/>\r\n                        <MinecraftText text={info.description} className=\"progress-bar-text textshadow\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\n\r\nclass PlayerForm extends React.Component {\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const srch = e.target.srchInp.value.trim().replace(/-/g,'');\r\n        if(srch!=='') {\r\n            this.props.history.push(`/players/${srch}`);\r\n            e.target.srchInp.value='';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search-header\">\r\n                <h1 className=\"page-header\">Pit Panda</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h3 className=\"page-header\">Advanced Pit Stats Grabber</h3>\r\n                    <fieldset className=\"text-holder\">\r\n                        <input type=\"text\" id=\"srchInp\" name=\"lookup\" placeholder=\"Enter a Minecraft Username or UUID...\" style={{width:\"50%\"}}/>\r\n                    </fieldset>\r\n                    <fieldset className=\"button-holder\">\r\n                        <input type=\"submit\" className=\"srchBtn\" value=\"Search\"/>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerForm;","import React, {useState} from 'react';\r\nimport MinecraftText from '../Minecraft/MinecraftText';\r\n\r\nfunction PlayerList(props){\r\n    let [text, setText] = useState(\"§7Loading\");\r\n    props.getUser(props.uuid).then(setText);\r\n    return (\r\n        <a title={props.hover} style={{display:'block'}} href={`/players/${props.uuid}`}>\r\n            <MinecraftText raw={text}/>\r\n        </a>\r\n    );\r\n} export default PlayerList;","import React, {useState} from 'react';\r\nimport PlayerEntry from './PlayerEntry';\r\n\r\nlet knownplayers = {};\r\nfunction PlayerList(props){\r\n    let clone = props.players.slice();\r\n    let tmpGroupQueue = [];\r\n    while(clone.length){\r\n        tmpGroupQueue.push(clone.splice(0,10));\r\n    }\r\n    let [groupQueue, setGroupQueue] = useState(tmpGroupQueue);\r\n    let [hasMore, setHasMore] = useState(groupQueue.length);\r\n    let [initiated, setInitiated] = useState(false);\r\n    let [loaded, setLoaded] = useState([]);\r\n    if(props.instant&&!initiated) initiate();\r\n    function initiate(){\r\n        setInitiated(true);\r\n        loadMore();\r\n    }\r\n    function loadMore(){\r\n        setLoaded(loaded.concat(groupQueue[0]));\r\n        setGroupQueue(groupQueue.slice(1));\r\n        setHasMore(groupQueue.length-1);\r\n    }\r\n    function getUser(uuid){\r\n        const promise = new Promise(resolve=>{\r\n            if(knownplayers[uuid]){\r\n                if(knownplayers[uuid].name) resolve(knownplayers[uuid].name);\r\n                else knownplayers[uuid].promise.then(resolve);\r\n            }else fetch(`/api/username/${uuid}`).then(res=>res.json()).then(json => {\r\n                console.log(json);\r\n                if(json.success) {\r\n                    knownplayers[uuid].name=json.name;\r\n                    resolve(json.name);\r\n                } else resolve(\"§4ERROR\");\r\n            }).catch((err)=>{\r\n                resolve(\"§4ERROR\");\r\n                console.log(err);\r\n            });\r\n        });\r\n        knownplayers[uuid]={promise};\r\n        return promise;\r\n    }\r\n    return (\r\n        <>\r\n            {loaded.map((player,index)=><PlayerEntry getUser={getUser} key={index} uuid={player.tag} hover={player.hover}/>)}\r\n            {hasMore?(\r\n                <div style={{textAlign:'center'}}>\r\n                    {initiated?(\r\n                        <input type=\"button\" className=\"srchBtn\" value=\"Load More\" style={{marginTop:'10px'}} onClick={loadMore}/>\r\n                    ):(\r\n                        <input type=\"button\" className=\"srchBtn\" value=\"Load\" style={{margin:0}} onClick={initiate}/>\r\n                    )}\r\n                </div>\r\n            ):''}\r\n        </>\r\n    );\r\n} export default PlayerList;","import React from 'react';\r\nimport StaticCard from '../Cards/StaticCard';\r\nimport TabbedCard from '../Cards/TabbedCard';\r\nimport NumberedCard from '../Cards/NumberedCard';\r\nimport MinecraftText from '../Minecraft/MinecraftText';\r\nimport MinecraftInventory from '../Minecraft/MinecraftInventory';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport PlayerForm from './PlayerForm';\r\nimport PlayerList from '../PlayerList/PlayerList';\r\nimport frontendTools from '../../scripts/frontendTools';\r\n\r\nclass Player extends React.Component {\r\n  state = {user:null};\r\n\r\n  componentDidMount(){\r\n    this.loadUser(`/players/${(this.props.match.params.id||'').trim()}`);\r\n    this.unlisten = this.props.history.listen((location)=>{\r\n      this.loadUser(location.pathname);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.unlisten();\r\n  }\r\n\r\n  loadUser = (path) => {\r\n    if(!path.startsWith('/players/'))return;\r\n    fetch(`/api${path}`).then(res=>res.json()).then(json => {\r\n      console.log(json);\r\n      if(json.success) {\r\n        this.setState({user:json.data,error:undefined});\r\n      } else this.setState({error:json.error,user:undefined});\r\n    }).catch((err)=>{\r\n      this.setState({error:err,user:undefined});\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <PlayerForm history={this.props.history}/>\r\n        <div style={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center'\r\n        }}>\r\n          {this.state.user?(\r\n            <React.Fragment>\r\n              <div id=\"side\" style={{\r\n                display: 'inline-block',\r\n                margin: '20px',\r\n                minWidth: '350px'\r\n              }}>\r\n                <StaticCard title=\"Profile\">\r\n                  <div>\r\n                    <img \r\n                      src={`https://crafatar.com/avatars/${this.state.user.uuid}?overlay=true`} \r\n                      style = {{width:'100px', height:'100px', display:'inline-block'}}\r\n                      alt = ''\r\n                    />\r\n                    <div key={this.state.user.uuid} style={{verticalAlign:'top', display:'inline-block', marginTop:'2px',marginLeft:'10px', fontSize:'17px'}}>\r\n                      <MinecraftText style={{fontSize:'110%'}} raw={this.state.user.formattedName}/><br/>\r\n                      <MinecraftText raw={`LVL: ${this.state.user.formattedLevel}`}/><br/>\r\n                      <MinecraftText raw={`Gold: §6${this.state.user.currentGold.toLocaleString()}g`}/><br/>\r\n                      <MinecraftText raw={`Played: §f${frontendTools.minutesToString(this.state.user.playtime)}`}/>\r\n                    </div>\r\n                  </div>\r\n                </StaticCard>\r\n                {this.state.user.profileDisplay?(\r\n                  <StaticCard title={this.state.user.profileDisplay.title}>\r\n                    <div style={{maxWidth:'300px'}}>\r\n                      {this.state.user.profileDisplay.message?<p style={{marginBottom:this.state.user.profileDisplay.url?'10px':''}}>{this.state.user.profileDisplay.message}</p>:''}\r\n                      {this.state.user.profileDisplay.url?<a href={this.state.user.profileDisplay.url}>{this.state.user.profileDisplay.linkTitle||this.state.user.profileDisplay.url}</a>:''}\r\n                    </div>\r\n                  </StaticCard>\r\n                ):''}\r\n                {this.state.user.scammer?(\r\n                  <StaticCard title=\"Scammer\">\r\n                    <div style={{maxWidth:'300px'}}>\r\n                      This player has been marked as scammer by the <a href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" title=\"Coming Soon\">Trade Center Discord</a> staff.\r\n                      {this.state.user.scammer.notes?<><br/><br/>Trade Center Staff notes:<br/> {this.state.user.scammer.notes}</>:''}\r\n                      {this.state.user.scammer.discordid?<><br/><br/>Discord ID: <br/>{this.state.user.scammer.discordid}</>:''}\r\n                      {(this.state.user.scammer.alts&&this.state.user.scammer.alts.length)?<><br/><br/>Alts:<br/><PlayerList players={this.state.user.scammer.alts.map(alt=>({tag:alt}))} instant={true} /></>:''}\r\n                      {this.state.user.scammer.main?<><br/><br/>Main:<br/><PlayerList players={[{tag:this.state.user.scammer.main}]} instant={true} /></>:''}\r\n                    </div>\r\n                  </StaticCard>\r\n                ):''}\r\n                <StaticCard title=\"Status\" content={\r\n                  <div style={{fontSize:'16px'}}>\r\n                    <MinecraftText className='text-title' style={{color:this.state.user.online?'green':'red'}} text={this.state.user.online?'Online':'Offline'}/><br/>\r\n                    <MinecraftText text={`Last seen in pit ${frontendTools.timeSince(this.state.user.lastSave)} ago`}/><br/>\r\n                    {this.state.user.bounty?<MinecraftText raw={`Bounty: §6${this.state.user.bounty.toLocaleString()}g`}/>:''}\r\n                  </div>\r\n                }/>\r\n                <StaticCard title=\"Progress\" content={\r\n                  <div>\r\n                    <ProgressBar \r\n                      info={this.state.user.xpProgress} \r\n                      item={{id:384}} type=\"xp\" title=\"Prestige XP\"\r\n                    />\r\n                    <ProgressBar \r\n                      info={this.state.user.goldProgress} \r\n                      item={{id:266}} type=\"gold\" title=\"Prestige Gold\"\r\n                    />\r\n                    <ProgressBar \r\n                      info={this.state.user.renownProgress} \r\n                      item={{id:138}} type=\"renown\" title=\"Renown Shop\" style={{marginBottom:'0px'}}\r\n                    />\r\n                  </div>\r\n                }/>\r\n                {this.state.user.recentKills.length?(\r\n                  <StaticCard title=\"Recent Kills\" key={this.state.user.uuid}>\r\n                    <PlayerList players={this.state.user.recentKills.map(kill=>({tag:kill.victim,hover:new Date(kill.timestamp).toLocaleString()}))}/>\r\n                  </StaticCard>\r\n                ):''}\r\n              </div>\r\n              <div id=\"main\" style={{\r\n                display: 'inline-block',\r\n                margin: '20px',\r\n                minWidth: '600px'\r\n              }}>\r\n                <TabbedCard tabs={[\"Inventory\",\"Enderchest\",\"Stash/Well\"]} content={[\r\n                  (\r\n                    <div key={`Inventory-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='main' inventory={this.state.user.inventories.main} rows={4} colors={true} style={{marginRight:'3px'}}/>\r\n                      <MinecraftInventory key='armor' inventory={this.state.user.inventories.armor} width={1} rows={4} colors={true}/>\r\n                    </div>\r\n                  ),(\r\n                    <div key={`Enderchest-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='enderchest' inventory={this.state.user.inventories.enderchest} rows={3} colors={true}/>\r\n                    </div>\r\n                  ),(\r\n                    <div key={`Stash/Well-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='stash' inventory={this.state.user.inventories.stash} rows={2} colors={true} style={{marginRight:'3px'}}/>\r\n                      <MinecraftInventory key='well' style={{verticalAlign:'top'}} inventory={this.state.user.inventories.well} width={1} rows={2} colors={true}/>\r\n                    </div>\r\n                  )\r\n                ]}/>\r\n                <TabbedCard tabs={[\"Perk Shop\",\"Renown Shop\"]} content={[\r\n                  (\r\n                    <div key={`Perk-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='perks' inventory={this.state.user.inventories.perks} width={this.state.user.inventories.perks.length} style={{margin:'0 auto', display:'block'}}/>\r\n                      <hr/>\r\n                      <MinecraftInventory key='upgrades' inventory={this.state.user.inventories.upgrades} width={7} style={{margin:'0 auto', display:'block'}}/>\r\n                    </div>\r\n                  ),(\r\n                    <div key={`Renown-${this.state.user.uuid}`}>\r\n                      <MinecraftInventory key='renownshop' inventory={this.state.user.inventories.renownShop} width={7} style={{margin:'0 auto', display:'block'}}/>\r\n                    </div>\r\n                  )\r\n                ]}/>\r\n                <StaticCard title=\"General Stats\" content={\r\n                  <div key={`General-${this.state.user.uuid}`}>\r\n                    <MinecraftInventory key='genstats' inventory={this.state.user.inventories.generalStats} width={this.state.user.inventories.generalStats.length} style={{margin:'0 auto', display:'block'}}/>\r\n                  </div>\r\n                }/>\r\n                <NumberedCard key={this.state.user.uuid} content={this.state.user.prestiges.map((prestige,index)=>(\r\n                  <div>\r\n                    {prestige.timestamp?<h3 style={{marginBottom:'10px'}}>Unlocked on {(new Date(prestige.timestamp)).toLocaleString()}</h3>:''}\r\n                    {prestige.gold&&this.state.user.prestiges.length-1!==index?<h3 style={{marginBottom:'10px'}}>Completed with {frontendTools.abbrNum(prestige.gold,2)} gold earned</h3>:''}\r\n                    <table style={{width:'100%'}}>\r\n                      <tbody>\r\n                        <tr>\r\n                        <td><strong>Type</strong></td><td><strong>Upgrade</strong></td><td><strong>Unlock time</strong></td>\r\n                        </tr>\r\n                        {prestige.unlocks.length>0?prestige.unlocks.slice().reverse().map((item,i)=>\r\n                          <tr key={i}>\r\n                            <td>{item.type}</td><td>{item.displayName} {(typeof item.tier === 'number')?item.tier+1:''}</td><td>{(new Date(item.timestamp)).toLocaleString()}</td>\r\n                          </tr>\r\n                        ):(\r\n                          <tr>\r\n                            <td>No Unlocks this Prestige</td><td></td><td></td>\r\n                          </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ))}/>\r\n              </div>\r\n            </React.Fragment>\r\n          ):(\r\n            <div style={{color:\"white\"}}>\r\n              {this.state.error||\"Loading...\"}\r\n            </div>\r\n          )\r\n          }\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport MinecraftText from '../Minecraft/MinecraftText';\r\nimport './SearchField.css';\r\n\r\nclass SearchField extends Component {\r\n\r\n    state = {\r\n        // The active selection's index\r\n        activeSuggestion: 0,\r\n        // The suggestions that match the user's input\r\n        filteredSuggestions: [],\r\n        // Whether or not the suggestion list is shown\r\n        showSuggestions: false,\r\n        // What the user has entered\r\n        userInput: this.props.says,\r\n        reporting: this.props.says,\r\n        userNumber: \"\",\r\n        showNumber:false\r\n    };\r\n\r\n    static getDerivedStateFromProps(props,state){\r\n        return {\r\n            activeSuggestion:state.activeSuggestion,\r\n            filteredSuggestions:state.filteredSuggestions,\r\n            showSuggestions:state.showSuggestions,\r\n            userInput:props.says,\r\n            reporting:state.reporting,\r\n            userNumber: state.userNumber,\r\n            showNumber:state.showNumber\r\n        }\r\n    }\r\n\r\n    numRef = React.createRef();\r\n\r\n    // Event fired when the input value is changed\r\n    onChange = e => {\r\n        const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value.split('').filter(str=>/[-+!\"':a-zA-Z0-9 ]/.test(str)).join('');\r\n\r\n        // Filter our suggestions that don't contain the user's input\r\n        const filteredSuggestions = suggestions.filter(\r\n            suggestion =>\r\n                suggestion[1].Name.replace(/§./g,'').toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n\r\n        // Update the user input and filtered suggestions, reset the active\r\n        // suggestion and make sure the suggestions are shown\r\n        const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===userInput&&!s[1].NoNumber))\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions,\r\n            showSuggestions: true,\r\n            userInput: userInput,\r\n            reporting: userInput,\r\n            showNumber,\r\n            userNumber:showNumber?this.state.userNumber:''\r\n        });\r\n        this.reportString(userInput,showNumber,this.state.userNumber,userInput);\r\n    };\r\n\r\n    reportString(value,showNumber,number,text){\r\n        if(text==='') return this.props.report('', '', 'resource');\r\n        value=value.toLowerCase();\r\n        number=number.toLowerCase();\r\n        let type = 'resource';\r\n        let match = this.props.suggestions.find(s=>value===s[0]);\r\n        if(!match){\r\n            match = this.props.suggestions.find(s=>s[1].Name.replace(/§./g,'').toLowerCase() === value);\r\n            if(!match) match = this.props.suggestions.find(s=>s[1].Name.replace(/§./g,'').toLowerCase().indexOf(value) > -1);\r\n            if(match) {\r\n                if(!showNumber&&!match[1].NoNumber){\r\n                    showNumber=true;\r\n                    number='0+';\r\n                }\r\n                if(match[1].Name.replace(/§./g,'').toLowerCase()===value) {\r\n                    type=match[1].Type;\r\n                    this.setState({showNumber:!match[1].NoNumber});\r\n                }\r\n                value  = match[0];\r\n            }\r\n        }else{\r\n            type=match[1].Type;\r\n        }\r\n        if(value==='color'){\r\n            const colors = this.props.suggestions.find(s=>s[0]==='color');\r\n            if(colors&&typeof colors[1].Colors[number] !== 'undefined') number=colors[1].Colors[number];\r\n        }\r\n        if(typeof number === 'undefined' || number==='') number = '0+';\r\n        if(number.startsWith('<')) number=number.substring(1)+'-';\r\n        if(number.startsWith('>')) number=number.substring(1)+'+';\r\n        this.props.report(value+(showNumber?number:''), text, type);\r\n    }\r\n\r\n    onNumberChange = e => {\r\n        let userNumber = e.currentTarget.value.split('').filter(str=>/[-+><0-9a-zA-Z]/.test(str)).join('');\r\n        this.setState({userNumber});\r\n        this.reportString(this.state.reporting,true,userNumber,this.state.userInput);\r\n    }\r\n\r\n    onClick = e => {\r\n        this.select(e.currentTarget.getAttribute('index'));\r\n    };  \r\n\r\n    select = index => {\r\n        const reporting = this.state.filteredSuggestions[index][0];\r\n        const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===reporting&&!s[1].NoNumber));\r\n        if(showNumber) setTimeout(()=>this.numRef.current.focus(),0);\r\n        const userInput = this.state.filteredSuggestions[index][1].Name.replace(/§./g,'')\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions:[],\r\n            showSuggestions: false,\r\n            showNumber,\r\n            reporting,\r\n            userNumber:'',\r\n            userInput\r\n        });\r\n        this.reportString(reporting,showNumber,this.state.userNumber,userInput, this.state.filteredSuggestions[index][1].Type);\r\n    }\r\n\r\n    onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions, showSuggestions } = this.state;\r\n        if(e.currentTarget.value!=='' && showSuggestions && filteredSuggestions.length && filteredSuggestions.length !== this.props.suggestions.length){\r\n            if (e.keyCode === 13 || (e.keyCode === 9 && !e.shiftKey)) {\r\n                if(filteredSuggestions[activeSuggestion]){\r\n                    this.select(activeSuggestion);\r\n                }else{\r\n                    const reporting = e.currentTarget.value;\r\n                    const showNumber = Boolean(this.props.suggestions.find(s=>s[0]===reporting&&!s[1].NoNumber));\r\n                    this.setState({\r\n                        activeSuggestion: 0,\r\n                        showSuggestions: false,\r\n                        userInput: e.currentTarget.value,\r\n                        showNumber,\r\n                        userNumber: showNumber?this.state.userNumber:'',\r\n                        reporting\r\n                    });\r\n                    this.reportString(reporting,showNumber,this.state.userNumber,e.currentTarget.value);\r\n                }\r\n            }\r\n            // User pressed the up arrow, decrement the index\r\n            else if (e.keyCode === 38) {\r\n                if (activeSuggestion === 0) {\r\n                    return;\r\n                }\r\n    \r\n                this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n            }\r\n            // User pressed the down arrow, increment the index\r\n            else if (e.keyCode === 40) {\r\n                if (activeSuggestion + 1 === filteredSuggestions.length) {\r\n                    return;\r\n                }\r\n    \r\n                this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n            }\r\n        }else{\r\n            if (e.keyCode === 8 && e.currentTarget.value==='') return this.props.kill();\r\n            else if (e.keyCode===38) this.props.up();\r\n            else if (e.keyCode===40) this.props.down();\r\n            else if (e.keyCode===13) {\r\n                if(this.state.showNumber) this.numRef.current.focus();\r\n                else this.props.down();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDownNumber = e => {\r\n        if (e.keyCode === 8 && e.currentTarget.value==='') this.props.mainRef.current.focus();\r\n        else if (e.keyCode===38) this.props.up();\r\n        else if (e.keyCode===40||e.keyCode===13) this.props.down();\r\n    }\r\n\r\n    onBlur = e => {\r\n        this.props.timeOutFix(setTimeout(()=>this.setState({ showSuggestions: false }),150));\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onNumberChange,\r\n            onClick,\r\n            onKeyDown,\r\n            numRef,\r\n            onBlur,\r\n            onKeyDownNumber,\r\n            state: {\r\n                activeSuggestion,\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                showNumber,\r\n                userInput,\r\n                userNumber\r\n            }\r\n        } = this;\r\n\r\n        let suggestionsListComponent;\r\n\r\n        const tabIndex = {};\r\n        if(!showNumber) tabIndex.tabIndex=-1;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if(filteredSuggestions.length){\r\n                suggestionsListComponent = (\r\n                    <ul className={`suggestions ${showNumber?'SuggestionsHalf':''}`}>\r\n                        {filteredSuggestions.slice(0,8).map((suggestion, index) => {\r\n                            let className;\r\n    \r\n                            // Flag the active suggestion with a class\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestion-active\";\r\n                            }\r\n    \r\n                            return (\r\n                                <li\r\n                                    className={className}\r\n                                    key={suggestion[0]}\r\n                                    onClick={onClick}\r\n                                    index={index}\r\n                                    >\r\n                                    <MinecraftText raw={suggestion[1].Name}/>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                    value={userInput}\r\n                    onBlur={onBlur}\r\n                    ref={this.props.mainRef}\r\n                    className={`SearchField ${showNumber?'Half':''}`}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    onChange={onNumberChange}\r\n                    onKeyDown={onKeyDownNumber}\r\n                    value={userNumber}\r\n                    className={`SearchField NumberField ${showNumber?'':'HideField'}`}\r\n                    ref={numRef}\r\n                    {...tabIndex}\r\n                />\r\n                {suggestionsListComponent}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport SearchField from '../SearchField/SearchField';\r\nimport StaticCard from '../Cards/StaticCard';\r\nimport pitMaster from '../../pitMaster.json';\r\nimport uuid from 'uuid';\r\n\r\nlet Mystics = pitMaster.Pit.Mystics;\r\nMystics.pants = {Name:'§fPants',Type:'pants',NoNumber:true};\r\nMystics.sword = {Name:'§fSword',Type:'sword',NoNumber:true};\r\nMystics.bow = {Name:'§fBow',Type:'bow',NoNumber:true};\r\nMystics.lives = {Name:'§fLives',Type:'resource'};\r\nMystics.maxLives = {Name:'§fMax Lives',Type:'resource'};\r\nMystics.tokens = {Name:'§fTokens',Type:'resource'};\r\nMystics.artifact = {Name:'§fArtifact',Type:'resource',NoNumber:true};\r\nMystics.rare = {Name:'§fRare',Type:'resource',NoNumber:true};\r\nMystics.legendary = {Name:'§fLegendary',Type:'resource',NoNumber:true};\r\nMystics.bountiful = {Name:'§fBountiful',Type:'resource',NoNumber:true};\r\nMystics.extraordinary = {Name:'§fExtraordinary',Type:'resource',NoNumber:true};\r\nMystics.unthinkable = {Name:'§fUnthinkable',Type:'resource',NoNumber:true};\r\nMystics.overpowered = {Name:'§fOverpowered',Type:'resource',NoNumber:true};\r\nMystics.miraculous = {Name:'§fMiraculous',Type:'resource',NoNumber:true};\r\nMystics.million = {Name:'§fOne in a Million',Type:'resource',NoNumber:true};\r\nMystics.nonce = {Name:'§fNonce',Type:'resource'};\r\nMystics.color = {Name:'§fColor',Type:'pants',Colors:{\r\n    red:'0',\r\n    yellow:'1',\r\n    blue:'2',\r\n    orange:'3',\r\n    green:'4'\r\n}};\r\nMystics['color0'] = {Name:'§fRed',Type:'pants',NoNumber:true};\r\nMystics['color1'] = {Name:'§fYellow',Type:'pants',NoNumber:true};\r\nMystics['color2'] = {Name:'§fBlue',Type:'pants',NoNumber:true};\r\nMystics['color3'] = {Name:'§fOrange',Type:'pants',NoNumber:true};\r\nMystics['color4'] = {Name:'§fGreen',Type:'pants',NoNumber:true};\r\n\r\nconst valid = ['pants','sword','bow','resource'];\r\nconst formatted = Object.entries(Mystics)\r\n    .filter(([,ench])=>valid.includes(ench.Type))\r\n    .sort(([,a],[,b])=>a.Name.substring(a.Name.indexOf('§9')+2)<b.Name.substring(b.Name.indexOf('§9')+2)?-1:1);\r\n\r\nfunction createInputData(){\r\n    return {id:uuid.v4(),ref:React.createRef(),reporting:'',says:''};\r\n}\r\n\r\nclass QueryBox extends React.Component{\r\n\r\n    state={\r\n        inputs:[createInputData()],\r\n        type:'*'\r\n    }\r\n    buttonRef=React.createRef();\r\n\r\n    killInput = (index) => {\r\n        if((index!==this.state.inputs.length-1&&index!==0)||(index!==0&&this.state.inputs[index-1].report==='')){\r\n            let inputs = this.state.inputs;\r\n            inputs[index-1].ref.current.focus();\r\n            inputs[index-1].says+='_';\r\n            clearTimeout(inputs[index].timeout)\r\n            inputs = inputs.slice(0,index).concat(inputs.slice(index+1));\r\n            this.setState({inputs});\r\n        }\r\n    }\r\n\r\n    timeOutFix = (timeout,index) => {\r\n        let inputs = this.state.inputs;\r\n        inputs[index].timeout=timeout;\r\n        this.setState({inputs});\r\n    }\r\n\r\n    monitorInputs = (report,raw,type,index) => {\r\n        let inputs = this.state.inputs;\r\n        inputs[index].reporting=report;\r\n        inputs[index].says=raw;\r\n        inputs[index].type=type;\r\n        let foundType;\r\n        for(const input of inputs){\r\n            if(input.type&&input.type!=='resource'){\r\n                foundType=input.type;\r\n                this.setState({type:input.type})\r\n            }\r\n        }\r\n        if(!foundType) this.setState({type:'*'});\r\n        if(index+1===inputs.length){\r\n            inputs.push(createInputData());\r\n        }\r\n        this.setState({inputs});\r\n    }\r\n\r\n    buildAndSendQuery = () => {\r\n        let inputs = this.state.inputs;\r\n        let toClear = inputs.filter((input,index)=>(input.reporting==='')&&index!==inputs.length-1);\r\n        toClear.forEach(input=>clearTimeout(input.timeout))\r\n        inputs = inputs.filter((input,index)=>(input.reporting!=='')||index===inputs.length-1);\r\n        let queryString = inputs.slice(0,-1).map(i=>i.reporting).join();\r\n        if(this.state.type!=='*') queryString+=','+this.state.type;\r\n        this.props.query(queryString);\r\n        this.setState({inputs});\r\n    }\r\n\r\n    focus = (index) => {\r\n        if(this.state.inputs[index]){\r\n            this.state.inputs[index].ref.current.focus();\r\n        }else if(index>=this.state.inputs.length) this.buttonRef.current.focus();\r\n    }\r\n\r\n    render(){\r\n        let suggestions = formatted;\r\n        if(this.state.type!=='*') suggestions = suggestions.filter(([,ench])=>['resource',this.state.type].includes(ench.Type));\r\n        return (\r\n            <StaticCard title=\"Query\" style={{width:'350px',display:'inline-block',verticalAlign:'top',margin:'20px',textAlign:'left'}}>\r\n                {this.state.inputs.map((input,index)=>(\r\n                    <SearchField \r\n                        up={()=>this.focus(index-1)} \r\n                        down={()=>this.focus(index+1)} \r\n                        says={input.says} \r\n                        timeOutFix={timeout=>this.timeOutFix(timeout,index)} \r\n                        kill={e=>this.killInput(index)} \r\n                        key={input.id} \r\n                        mainRef={input.ref} \r\n                        suggestions={suggestions} \r\n                        report={(a,b,c)=>this.monitorInputs(a,b,c,index)}\r\n                    />\r\n                ))}\r\n                <button \r\n                    onClick={this.buildAndSendQuery} \r\n                    onKeyDown={e=>{if(e.keyCode===38)this.focus(this.state.inputs.length-1);}} \r\n                    ref={this.buttonRef} \r\n                    className='srchBtn' \r\n                    style={{marginTop:'0px'}}\r\n                >Search</button>\r\n            </StaticCard>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QueryBox;\r\n","import React from 'react';\r\nimport MinecraftInventory from '../Minecraft/MinecraftInventory';\r\nimport StaticCard from '../Cards/StaticCard';\r\nimport QueryBox from '../QueryBox/QueryBox';\r\n\r\nconst pageSize = 72;\r\nclass ItemSearch extends React.Component {\r\n    state={\r\n        results:new Array(9).fill({fake:true}),\r\n        loading:false,\r\n        lastsize:0,\r\n        knownUUIDS:{},\r\n        page:0,\r\n        queryString:''\r\n    };\r\n\r\n    componentDidMount(){\r\n        if(this.props.match.params.query) this.query(this.props.match.params.query);\r\n        this.unlisten = this.props.history.listen((location)=>{\r\n            this.query(location.pathname.substring('/itemsearch/'.length));\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.unlisten();\r\n    }\r\n\r\n    query=(queryString)=>{\r\n        if(queryString.length===0)\r\n            return this.setState({results:new Array(9).fill({fake:true}),loading:false,lastsize:0,page:0,queryString});\r\n        if(this.state.queryString===queryString) return;\r\n        this.setState({loading:true,page:0,queryString});\r\n        fetch('/api/itemsearch/'+queryString).then(res=>res.json()).then(json => {\r\n            if(!json.success) return;\r\n            this.readyItems(json.items);\r\n            const result = json.items.map(item=>item.item);\r\n            console.log(json);\r\n            this.setState({results:result,loading:false,lastsize:result.length});\r\n        });\r\n    }\r\n\r\n    updatePath=(queryString)=>this.props.history.push(`/itemsearch/${queryString}`);\r\n    \r\n    requestOwner=(index)=>{\r\n        if(!this.state.results[index].fake&&!this.state.results[index].checked){\r\n            let results = this.state.results;\r\n            let owner = results[index].owner;\r\n            let knownUUIDS = this.state.knownUUIDS;\r\n            let targets = results.filter(item=>item.owner===owner);\r\n            for(let item of targets){\r\n                item.checked = true;\r\n                item.desc[0] = '§7Owner: Loading';\r\n            }\r\n            this.setState({results});\r\n            fetch(`/api/username/${owner}`).then(res=>res.json()).then(json => {\r\n                console.log(json);\r\n                if(json.success){\r\n                    for(let item of targets){\r\n                        item.desc[0] = '§7Owner: '+json.name;\r\n                    }\r\n                    knownUUIDS[owner]=json.name;\r\n                }else{\r\n                    for(let item of targets){\r\n                        item.checked = false;\r\n                        item.desc[0] = '§7Owner: §4ERROR';\r\n                    }\r\n                }\r\n                this.setState({results,knownUUIDS});\r\n            });\r\n        }\r\n    }\r\n\r\n    readyItems = (items) => {\r\n        for(let item of items){\r\n            item.item.desc.unshift('§7Lastseen: '+new Date(item.lastseen*1000).toLocaleString());\r\n            if(this.state.knownUUIDS[item.owner]) {\r\n                item.item.desc.unshift('§7Owner: '+this.state.knownUUIDS[item.owner]);\r\n                item.item.checked = true;\r\n            }\r\n            else {\r\n                item.item.desc.unshift('§7Owner: Click to request');\r\n                item.item.checked = false;\r\n            }\r\n            item.item.uuid = item.id;\r\n            item.item.owner = item.owner;\r\n        }\r\n    }\r\n\r\n    loadMore = () => {\r\n        this.setState({loading:true,page:this.state.page+1})\r\n        fetch(`/api/itemSearch/${this.state.queryString}/${this.state.page+1}`).then(res=>res.json()).then(json => {\r\n            if(!json.success) return;\r\n            this.readyItems(json.items);\r\n            let results = this.state.results;\r\n            results = results.concat(json.items.map(item=>item.item));\r\n            console.log(json);\r\n            this.setState({results,loading:false,lastsize:json.items.length});\r\n        });\r\n    }\r\n\r\n    directToOwner = (i,e) =>{\r\n        e.preventDefault();\r\n        if(this.state.results[i].fake)return;\r\n        if(!e.ctrlKey){\r\n            this.props.history.push(`/players/${this.state.results[i].owner}`);\r\n        }else{\r\n            let path = `${window.location.origin}/players/${this.state.results[i].owner}`;\r\n            let win = window.open(path);\r\n            win.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:'center'}}>\r\n                <h1 className=\"page-header\" style={{marginBottom:'200px'}}>Pit Panda Mystic Search</h1>\r\n                <QueryBox query={this.updatePath}/>\r\n                <div style={{display:'inline-block',textAlign:'left',margin:'20px'}}>\r\n                    <StaticCard title=\"Results\">\r\n                        <MinecraftInventory style={{display:'block'}} key={this.state.queryString} inventory={this.state.results} onContextMenu={this.directToOwner} onClick={this.requestOwner} colors={true}/>\r\n                        {this.state.lastsize===pageSize&&this.state.results.length!==0&&!this.state.loading?\r\n                        <div style={{margin:'auto',textAlign:'center'}}>\r\n                            <button onClick={this.loadMore} className='srchBtn'>Load More</button>\r\n                        </div>:''}\r\n                    </StaticCard>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemSearch;","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\nfunction Nav(props){\r\n    function onClick(ref){\r\n        props.history.push(ref);\r\n    }\r\n    const buttons = [\r\n        {name:'Pit Panda',path:'/'},\r\n        {name:'Mystic Searcher',path:'/itemsearch'}\r\n    ];\r\n    const findBest = (path) => {\r\n        let best = 0;\r\n        for(let i = 0; i < buttons.length; i++){\r\n            if(path.startsWith(buttons[i].path)) best = i;\r\n        }\r\n        return best;\r\n    }\r\n    let [selected, setSelected] = useState(findBest(window.location.pathname));\r\n    useEffect(()=>{\r\n        return props.history.listen((location)=>setSelected(findBest(location.pathname)));\r\n    });\r\n    return (\r\n        <ul className='nav'>\r\n            {buttons.map((info,index)=>(\r\n                <li key={Date.now()+index} className={index===selected?'active':''} onClick={()=>onClick(info.path)}>{info.name}</li>\r\n            ))}\r\n        </ul>\r\n    );\r\n} export default withRouter(Nav);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Switch, Route, withRouter, Redirect } from 'react-router-dom';\r\nimport './index.css';\r\nimport Player from './Components/Apps/Player';\r\nimport PlayerForm from './Components/Apps/PlayerForm';\r\nimport ItemSearch from './Components/Apps/ItemSearch';\r\nimport Nav from './Components/Nav/Nav';\r\n\r\nReactDOM.render((\r\n    <>\r\n        <BrowserRouter>\r\n            <Nav/>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={withRouter(PlayerForm)}/>\r\n                <Route exact path=\"/players/:id\" component={withRouter(Player)}/>\r\n                <Route exact path=\"/itemsearch/:query?\" component={withRouter(ItemSearch)}/>\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </>\r\n), document.getElementById('root'));"],"sourceRoot":""}